<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xinli&#39;s Blog</title>
  <subtitle>Coding World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xinli90.com/"/>
  <updated>2016-09-22T14:46:59.000Z</updated>
  <id>http://xinli90.com/</id>
  
  <author>
    <name>Xinli Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Longest Palindromic Substring</title>
    <link href="http://xinli90.com/2016/09/22/Longest-Palindromic-Substring/"/>
    <id>http://xinli90.com/2016/09/22/Longest-Palindromic-Substring/</id>
    <published>2016-09-22T14:46:59.000Z</published>
    <updated>2016-09-22T14:46:59.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Day13 Tradeoff of Different Language</title>
    <link href="http://xinli90.com/2016/09/21/Day13-Tradeoff-of-Different-Language/"/>
    <id>http://xinli90.com/2016/09/21/Day13-Tradeoff-of-Different-Language/</id>
    <published>2016-09-22T01:37:49.000Z</published>
    <updated>2016-09-22T03:03:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇是关于各种语言特性的区别以及技术栈的选择</p>
<h2 id="攻略模板"><a href="#攻略模板" class="headerlink" title="攻略模板"></a>攻略模板</h2><ul>
<li>回忆各语言特性</li>
<li>总结语言特性，并总结用法</li>
<li>比较其优缺点</li>
</ul>
<h2 id="自己回忆"><a href="#自己回忆" class="headerlink" title="自己回忆"></a>自己回忆</h2><ul>
<li>JAVA</li>
<li>C++</li>
<li>PHP</li>
<li>Ruby on Rails</li>
<li>Python</li>
<li>JavaScript</li>
</ul>
<h2 id="学习后总结："><a href="#学习后总结：" class="headerlink" title="学习后总结："></a>学习后总结：</h2><h3 id="JAVA中的-“-”-用法"><a href="#JAVA中的-“-”-用法" class="headerlink" title="JAVA中的 “@” 用法"></a>JAVA中的 “@” 用法</h3><h3 id="Strong-Type-Programming-and-Weak-Type-Programming"><a href="#Strong-Type-Programming-and-Weak-Type-Programming" class="headerlink" title="Strong Type Programming and Weak Type Programming"></a>Strong Type Programming and Weak Type Programming</h3><h3 id="Dynamic-Programming-and-Static-Programming"><a href="#Dynamic-Programming-and-Static-Programming" class="headerlink" title="Dynamic Programming and Static Programming"></a>Dynamic Programming and Static Programming</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇是关于各种语言特性的区别以及技术栈的选择&lt;/p&gt;
&lt;h2 id=&quot;攻略模板&quot;&gt;&lt;a href=&quot;#攻略模板&quot; class=&quot;headerlink&quot; title=&quot;攻略模板&quot;&gt;&lt;/a&gt;攻略模板&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;回忆各语言特性&lt;/li&gt;
&lt;li&gt;总结语言特性，并总
    
    </summary>
    
      <category term="JAVA" scheme="http://xinli90.com/categories/JAVA/"/>
    
    
      <category term="Seeking Job" scheme="http://xinli90.com/tags/Seeking-Job/"/>
    
  </entry>
  
  <entry>
    <title>String to Integer (atoi)</title>
    <link href="http://xinli90.com/2016/09/21/String-to-Integer-atoi/"/>
    <id>http://xinli90.com/2016/09/21/String-to-Integer-atoi/</id>
    <published>2016-09-22T01:12:34.000Z</published>
    <updated>2016-09-22T01:16:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/string-to-integer-atoi/" target="_blank" rel="external">Leetcode-String to Integer (atoi)</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Implement atoi to convert a string to an integer. </p>
<p>Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.</p>
<p>Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.   </p>
<p>spoilers alert… click to show requirements for atoi.    </p>
<p>Requirements for atoi:<br>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p>
<p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p>
<p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p>
<p>If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><ol>
<li>首先要消除空格</li>
<li>可能会有正负号，所以要取出第一个符号，之后如果还有符号，则需要返回0</li>
<li>如果数字超出最大或者最小数，一律返回最大或最小数  </li>
</ol>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> myAtoi(String <span class="keyword">str</span>) &#123;</div><div class="line">        <span class="keyword">str</span> = <span class="keyword">str</span>.trim();</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">str</span>.length()==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, sign = <span class="number">1</span>, num = <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">str</span>.charAt(i)==<span class="string">'-'</span> || <span class="keyword">str</span>.charAt(i)==<span class="string">'+'</span>)&#123;</div><div class="line">            sign = <span class="keyword">str</span>.charAt(i++)==<span class="string">'-'</span>? <span class="number">-1</span> : <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">while</span>(i&lt;<span class="keyword">str</span>.length()&amp;&amp; <span class="keyword">str</span>.charAt(i)&gt;=<span class="string">'0'</span>&amp;&amp; <span class="keyword">str</span>.charAt(i)&lt;=<span class="string">'9'</span>) &#123;</div><div class="line">            <span class="keyword">if</span>(num&gt;Integer.MAX_VALUE/<span class="number">10</span> || (num==Integer.MAX_VALUE/<span class="number">10</span> &amp;&amp; <span class="keyword">str</span>.charAt(i)-<span class="string">'0'</span>&gt;<span class="number">7</span>))&#123;</div><div class="line">                <span class="keyword">return</span> sign==<span class="number">1</span>? Integer.MAX_VALUE:Integer.MIN_VALUE;</div><div class="line">            &#125;</div><div class="line">            num = num*<span class="number">10</span> + <span class="keyword">str</span>.charAt(i++)-<span class="string">'0'</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> num*sign;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/string-to-integer-atoi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-String
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Reverse Integer</title>
    <link href="http://xinli90.com/2016/09/21/Reverse-Integer/"/>
    <id>http://xinli90.com/2016/09/21/Reverse-Integer/</id>
    <published>2016-09-21T23:03:14.000Z</published>
    <updated>2016-09-22T00:32:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/reverse-integer/" target="_blank" rel="external">Leetcode-Reverse Integer</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Reverse digits of an integer.</p>
<p>Example1: x = 123, return 321<br>Example2: x = -123, return -321     </p>
<p>click to show spoilers.      </p>
<p>Have you thought about this?<br>Here are some good questions to ask before coding. Bonus points for you if you have already thought through this!       </p>
<p>If the integer’s last digit is 0, what should the output be? ie, cases such as 10, 100.</p>
<p>Did you notice that the reversed integer might overflow? Assume the input is a 32-bit integer, then the reverse of 1000000003 overflows. How should you handle such cases?</p>
<p>For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p>
<p>Update (2014-11-10):<br>Test cases had been added to test the overflow behavior.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Reverse as usual but maintain the last digit in order not to overflow.(don’t add it)  </li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>when the overflow happens, newResult will have garbage value</li>
<li>We cannot get back to the original value, then we can use the equal method</li>
</ol>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    public <span class="built_in">int</span> reverse(<span class="built_in">int</span> x) &#123;</div><div class="line">    	<span class="comment">//to avoid negative number overflow when invert to positive number</span></div><div class="line">    	<span class="keyword">if</span>(x==Integer.MIN_VALUE) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="built_in">int</span> <span class="built_in">num</span> = x&gt;<span class="number">0</span>? x : -x;</div><div class="line">        <span class="built_in">int</span> y = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="built_in">num</span>&gt;=<span class="number">10</span>)&#123;</div><div class="line">        	y = y*<span class="number">10</span> + <span class="built_in">num</span>%<span class="number">10</span>;</div><div class="line">        	<span class="built_in">num</span> /= <span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">int</span> result = <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(x&gt;<span class="number">0</span>) &#123;</div><div class="line">        	<span class="built_in">int</span> compare = Integer.MAX_VALUE/<span class="number">10</span>;</div><div class="line">        	<span class="keyword">if</span>(y&lt;compare)&#123;</div><div class="line">        		result = y*<span class="number">10</span>+<span class="built_in">num</span>;</div><div class="line">        	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(y==compare) &#123;</div><div class="line">        		result = Integer.MAX_VALUE%<span class="number">10</span>&gt;<span class="built_in">num</span>? y*<span class="number">10</span>+<span class="built_in">num</span> : <span class="number">0</span>;</div><div class="line">        	&#125;</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">        	<span class="built_in">int</span> compare = Integer.MIN_VALUE/<span class="number">10</span>;</div><div class="line">        	<span class="keyword">if</span>(y&lt;-compare)&#123;</div><div class="line">        		result = -(y*<span class="number">10</span>+<span class="built_in">num</span>);</div><div class="line">        	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(y==-compare) &#123;</div><div class="line">        		result = Integer.MIN_VALUE%<span class="number">10</span>&lt;-<span class="built_in">num</span>? -(y*<span class="number">10</span>+<span class="built_in">num</span>) : <span class="number">0</span>;</div><div class="line">        	&#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">	public <span class="built_in">int</span> reverse(<span class="built_in">int</span> x) &#123;</div><div class="line">		<span class="built_in">int</span> result = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span>(x!=<span class="number">0</span>) &#123;</div><div class="line">			<span class="built_in">int</span> tail = x%<span class="number">10</span>;</div><div class="line">			<span class="built_in">int</span> newResult = result*<span class="number">10</span> + tail;</div><div class="line">			<span class="keyword">if</span>((newResult-tail)/<span class="number">10</span> != result) &#123;</div><div class="line">				<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">			result = newResult;</div><div class="line">			x /= <span class="number">10</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/reverse-integer/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Reverse Integ
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Majority Element</title>
    <link href="http://xinli90.com/2016/09/21/Majority-Element/"/>
    <id>http://xinli90.com/2016/09/21/Majority-Element/</id>
    <published>2016-09-21T22:44:12.000Z</published>
    <updated>2016-09-21T23:00:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/majority-element/" target="_blank" rel="external">Leetcode-Majority Element</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p>
<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Sort the array, the majority element must appear in the middle.   </li>
<li>Time Complexity is O(nlgn)</li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Use HashMap to count all elements.</li>
<li>get the value which is greater than ⌊ n/2 ⌋ times.</li>
</ol>
<h4 id="Solution3"><a href="#Solution3" class="headerlink" title="Solution3"></a>Solution3</h4><ol>
<li>Track the count, only if the element that appears more than ⌊ n/2 ⌋ times can make count is greater than 0.</li>
<li>Time Complexity is O(n),Space Complexity is O(1)</li>
</ol>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> majorityElement(<span class="keyword">int</span>[] nums) &#123;</div><div class="line">        Arrays.sort(nums);</div><div class="line">        <span class="keyword">return</span> nums[nums.length/<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution3</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> majorityElement(<span class="keyword">int</span>[] nums) &#123;</div><div class="line">		<span class="keyword">int</span> <span class="keyword">count</span>=<span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> majority = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> num : nums) &#123;</div><div class="line">			<span class="keyword">if</span>(<span class="keyword">count</span>==<span class="number">0</span>)&#123;</div><div class="line">				majority = num;</div><div class="line">				<span class="keyword">count</span>++</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(majority==nums[i]) &#123;</div><div class="line">				<span class="keyword">count</span>++;</div><div class="line">			&#125;<span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">count</span>--;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> majority;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/majority-element/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Majority Ele
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>ZigZag Conversion</title>
    <link href="http://xinli90.com/2016/09/21/ZigZag-Conversion/"/>
    <id>http://xinli90.com/2016/09/21/ZigZag-Conversion/</id>
    <published>2016-09-21T21:52:51.000Z</published>
    <updated>2016-09-21T22:38:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/zigzag-conversion/" target="_blank" rel="external">Leetcode-ZigZag Conversion</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>The string “PAYPALISHIRING” is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>
<figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">P   A   H   <span class="keyword">N</span></div><div class="line">A P L S <span class="keyword">I</span> <span class="keyword">I</span> G</div><div class="line">Y   <span class="keyword">I</span>   R</div></pre></td></tr></table></figure>
<p>And then read line by line: “PAHNAPLSIIGYIR”      </p>
<p>Write the code that will take a string and make this conversion given a number of rows:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="built_in">string</span> <span class="title">convert</span><span class="params">(<span class="built_in">string</span> text, <span class="keyword">int</span> nRows)</span></span>;</div></pre></td></tr></table></figure>
<p>convert(“PAYPALISHIRING”, 3) should return “PAHNAPLSIIGYIR”.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>Create nRows StringBuffers, and keep collecting characters from original string to corresponding StringBuffer.  </p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> String convert(String s, <span class="keyword">int</span> numRows) &#123;</div><div class="line">    	StringBuilder[] sb = <span class="keyword">new</span> StringBuilder[numRows];</div><div class="line">    	<span class="keyword">int</span> <span class="keyword">index</span>=<span class="number">0</span>;</div><div class="line">    	<span class="keyword">char</span>[] arr = s.toCharArray();</div><div class="line">    	<span class="keyword">while</span>(<span class="keyword">index</span> &lt; s.length()) &#123;</div><div class="line">    		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;numRows &amp;&amp; <span class="keyword">index</span>&lt;s.length(); i++) &#123;</div><div class="line">    			sb[i].append(arr[<span class="keyword">index</span>++]);</div><div class="line">    		&#125;</div><div class="line">    		<span class="keyword">for</span>(<span class="keyword">int</span> j=numRows<span class="number">-2</span>; j&gt;=<span class="number">1</span> &amp;&amp; <span class="keyword">index</span>&lt;s.length(); j--) &#123;</div><div class="line">    			sb[j].append(arr[<span class="keyword">index</span>++]);</div><div class="line">    		&#125;</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;numRows; i++) &#123;</div><div class="line">    		sb[<span class="number">0</span>].append(sb[i]);</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">return</span> sb[<span class="number">0</span>].toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/zigzag-conversion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-ZigZag Conv
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Excel Sheet Column Title</title>
    <link href="http://xinli90.com/2016/09/21/Excel-Sheet-Column-Title/"/>
    <id>http://xinli90.com/2016/09/21/Excel-Sheet-Column-Title/</id>
    <published>2016-09-21T21:22:03.000Z</published>
    <updated>2016-09-21T21:31:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/excel-sheet-column-number/" target="_blank" rel="external">Leetcode-Excel Sheet Column Number</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a positive integer, return its corresponding column title as appear in an Excel sheet.</p>
<p>For example:</p>
<figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span> -&gt; A</div><div class="line"><span class="number">2</span> -&gt; B</div><div class="line"><span class="number">3</span> -&gt; C</div><div class="line">...</div><div class="line"><span class="number">26</span> -&gt; Z</div><div class="line"><span class="number">27</span> -&gt; AA</div><div class="line"><span class="number">28</span> -&gt; AB</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function">String <span class="title">convertToTitle</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">    	StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">    	<span class="keyword">while</span>(n&gt;<span class="number">0</span>) &#123;</div><div class="line">    		sb.insert(<span class="number">0</span>,(<span class="keyword">char</span>)(<span class="string">'A'</span>+(n<span class="number">-1</span>)%<span class="number">26</span>));</div><div class="line">    		n = (n<span class="number">-1</span>)/<span class="number">26</span>;</div><div class="line">    	&#125;</div><div class="line">    	<span class="function"><span class="keyword">return</span> sb.<span class="title">toString</span><span class="params">()</span></span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/excel-sheet-column-number/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Exc
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Excel Sheet Column Number</title>
    <link href="http://xinli90.com/2016/09/21/Excel-Sheet-Column-Number/"/>
    <id>http://xinli90.com/2016/09/21/Excel-Sheet-Column-Number/</id>
    <published>2016-09-21T21:07:34.000Z</published>
    <updated>2016-09-21T21:18:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/excel-sheet-column-number/" target="_blank" rel="external">Leetcode-Excel Sheet Column Number</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Related to question Excel Sheet Column Title</p>
<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>
<p>For example:</p>
<figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">A -&gt; <span class="number">1</span></div><div class="line">B -&gt; <span class="number">2</span></div><div class="line">C -&gt; <span class="number">3</span></div><div class="line">...</div><div class="line">Z -&gt; <span class="number">26</span></div><div class="line">AA -&gt; <span class="number">27</span></div><div class="line">AB -&gt; <span class="number">28</span></div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    public <span class="built_in">int</span> titleToNumber(<span class="built_in">String</span> s) &#123;</div><div class="line">        <span class="built_in">int</span> length = s.length();</div><div class="line">        <span class="built_in">int</span> <span class="built_in">num</span> = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>; i&lt;length; i++) &#123;</div><div class="line">            <span class="built_in">num</span> = <span class="built_in">num</span>*<span class="number">26</span>+ (s.charAt(i)<span class="number">-64</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">num</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/excel-sheet-column-number/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Exc
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Palindrome Number</title>
    <link href="http://xinli90.com/2016/09/21/Palindrome-Number/"/>
    <id>http://xinli90.com/2016/09/21/Palindrome-Number/</id>
    <published>2016-09-21T17:24:01.000Z</published>
    <updated>2016-09-21T21:01:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/palindrome-number/" target="_blank" rel="external">Leetcode-Palindrome Number</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Determine whether an integer is a palindrome. Do this without extra space.</p>
<p>click to show spoilers.</p>
<p>Some hints:<br>Could negative integers be palindromes? (ie, -1)</p>
<p>If you are thinking of converting the integer to string, note the restriction of using extra space.</p>
<p>You could also try reversing an integer. However, if you have solved the problem “Reverse Integer”, you know that the reversed integer might overflow. How would you handle such case?</p>
<p>There is a more generic way of solving this problem.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Get how many digits for this number</li>
<li>Each time compare the lowest and highest digit.</li>
<li>Time Limit Exceed </li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>We can use reverse method. But mantain the reversed version of int is always 1 time short in the factor of 10s</li>
</ol>
<h4 id="Solution3"><a href="#Solution3" class="headerlink" title="Solution3"></a>Solution3</h4><p>we can compare half of the digits </p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    public boolean isPalindrome(<span class="built_in">int</span> x) &#123;</div><div class="line">    	<span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="built_in">int</span> <span class="built_in">num</span> = x;</div><div class="line">        <span class="built_in">int</span> numDigit = <span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="built_in">num</span>!=<span class="number">0</span>)&#123;</div><div class="line">            <span class="built_in">num</span> /= <span class="number">10</span>;</div><div class="line">            numDigit *= <span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        numDigit /= <span class="number">10</span>;</div><div class="line">        <span class="built_in">num</span> = x;</div><div class="line">        <span class="keyword">while</span>(<span class="built_in">num</span>!=<span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">int</span> low = <span class="built_in">num</span>%<span class="number">10</span>;</div><div class="line">            <span class="built_in">int</span> high = <span class="built_in">num</span>/numDigit;</div><div class="line">            <span class="keyword">if</span>(low!=high) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            <span class="built_in">num</span> = (<span class="built_in">num</span>-high*numDigit)/<span class="number">10</span>;</div><div class="line">            numDigit /= <span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">	public boolean isPalindrome(<span class="built_in">int</span> x) &#123;</div><div class="line">		<span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		<span class="built_in">int</span> <span class="built_in">num</span> = x;</div><div class="line">		<span class="built_in">int</span> y = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">num</span> &gt;= <span class="number">10</span>) &#123;</div><div class="line">			y = y*<span class="number">10</span> + <span class="built_in">num</span>%<span class="number">10</span>;</div><div class="line">			<span class="built_in">num</span> /= <span class="number">10</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">num</span> == x%<span class="number">10</span> &amp;&amp; y==x/<span class="number">10</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">	public boolean isPalindrome(<span class="built_in">int</span> x) &#123;</div><div class="line">	 	<span class="keyword">if</span>(x&lt;<span class="number">0</span>||(x!=<span class="number">0</span>&amp;&amp;x%<span class="number">10</span>==<span class="number">0</span>)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">		<span class="built_in">int</span> <span class="built_in">num</span> = x;</div><div class="line">		<span class="built_in">int</span> y = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span>(y&lt;<span class="built_in">num</span>) &#123;</div><div class="line">			y = <span class="number">10</span>*y + <span class="built_in">num</span>%<span class="number">10</span>;</div><div class="line">			<span class="built_in">num</span> /= <span class="number">10</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> y==<span class="built_in">num</span> || y/<span class="number">10</span> == <span class="built_in">num</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/palindrome-number/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Palindrome 
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Reverse String</title>
    <link href="http://xinli90.com/2016/09/21/Reverse-String/"/>
    <id>http://xinli90.com/2016/09/21/Reverse-String/</id>
    <published>2016-09-21T16:56:31.000Z</published>
    <updated>2016-09-21T17:07:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/reverse-string/" target="_blank" rel="external">Leetcode-Reverse String</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Write a function that takes a string as input and returns the string reversed.</p>
<p>Example:<br>Given s = “hello”, return “olleh”.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><p>Use StringBuilder reverse() method    </p>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><p>Iterate String from end to start, at each character to a new string.</p>
<h4 id="Solution3"><a href="#Solution3" class="headerlink" title="Solution3"></a>Solution3</h4><p>Use swap method. Fastest solution.</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution1 &#123;</div><div class="line">    <span class="keyword">public</span> <span class="built_in">String</span> reverseString(<span class="built_in">String</span> s) &#123;  </div><div class="line">        return <span class="keyword">new</span> StringBuilder(s).reverse().toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution2 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="built_in">String</span> reverseString(<span class="built_in">String</span> s) &#123;  </div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=s.length()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i++) &#123;</div><div class="line">        	sb.append(s.charAt(i));</div><div class="line">        &#125;</div><div class="line">        return sb.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution3 &#123;</div><div class="line">    <span class="keyword">public</span> <span class="built_in">String</span> reverseString(<span class="built_in">String</span> s) &#123;</div><div class="line">        char[] arr = s.toCharArray();</div><div class="line">        <span class="built_in">int</span> <span class="built_in">left</span> = <span class="number">0</span>, <span class="built_in">right</span>=s.length()<span class="number">-1</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="built_in">left</span>&lt;<span class="built_in">right</span>) &#123;</div><div class="line">            char temp = arr[<span class="built_in">left</span>];</div><div class="line">            arr[<span class="built_in">left</span>] = arr[<span class="built_in">right</span>];</div><div class="line">            arr[<span class="built_in">right</span>] = temp;</div><div class="line">            <span class="built_in">left</span>++;</div><div class="line">            <span class="built_in">right</span>--;</div><div class="line">        &#125;</div><div class="line">        return <span class="keyword">new</span> <span class="built_in">String</span>(arr);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/reverse-string/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Reverse String
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Nim Game</title>
    <link href="http://xinli90.com/2016/09/21/Nim-Game/"/>
    <id>http://xinli90.com/2016/09/21/Nim-Game/</id>
    <published>2016-09-21T16:16:01.000Z</published>
    <updated>2016-09-21T16:52:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/nim-game/" target="_blank" rel="external">Leetcode-Nim Game</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.</p>
<p>Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.</p>
<p>For example, if there are 4 stones in the heap, then you will never win the game: no matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><p>BrainTest</p>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Recursive way. Time Limited Exceed.</li>
<li>The basic idea is if the opponent can win, then the player will lose. No matter how many stones the player move, the opponent will win. So       if(canWinNim(n-1)&amp;&amp;canWinNim(n-2)&amp;&amp;canWinNim(n-3)) return false;</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> n%<span class="number">4</span>!=<span class="number">0</span>;    </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</div><div class="line">    	<span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">3</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span>(canWinNim(n-<span class="number">1</span>)&amp;&amp;canWinNim(n-<span class="number">2</span>)&amp;&amp;canWinNim(n-<span class="number">3</span>)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;    </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/nim-game/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Nim Game&lt;/a&gt;.&lt;/p&gt;
&lt;h
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Median of Two Sorted Arrays</title>
    <link href="http://xinli90.com/2016/09/21/Median-of-Two-Sorted-Arrays/"/>
    <id>http://xinli90.com/2016/09/21/Median-of-Two-Sorted-Arrays/</id>
    <published>2016-09-21T15:08:42.000Z</published>
    <updated>2016-09-22T14:45:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="external">Leetcode-Median of Two Sorted Arrays</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p>
<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>
<p>Example 1:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">nums1 = [<span class="number">1</span>, <span class="number">3</span>]</div><div class="line">nums2 = [<span class="number">2</span>]</div><div class="line"></div><div class="line">The median is <span class="number">2.0</span></div></pre></td></tr></table></figure>
<p>Example 2:</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">nums1 = [<span class="number">1</span>, <span class="number">2</span>]</div><div class="line">nums2 = [<span class="number">3</span>, <span class="number">4</span>]</div><div class="line"></div><div class="line">The median is (<span class="number">2</span> + <span class="number">3</span>)/<span class="number">2</span> = <span class="number">2.5</span></div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Create a new Array with length of nums1 and nums2 and sort them all</li>
<li>find the median from this array</li>
<li>Time complexity is O(m+n), Space complexity is O(m+n)    </li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Use Binary Search Tree to get Time complexity O(log(m+n))</li>
<li>需要求得中位数m，即找第m小的数。不断地比较两个数组m/2位置的数(如果两个数组长度均大于m/2),否则一个取本身长度，一个取m的剩下值。所以要一直保证第一个数组长度小于第二个数组</li>
<li>不断地递归调用，每次舍弃更小的一半数组，确保中位数一直位于另一半的数组中。在每次截取时，同时更新需要寻找的第k小的数。</li>
</ol>
<figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">public class Solution1 &#123;</div><div class="line">    public <span class="keyword">double</span> findMedianSortedArrays(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</div><div class="line">        <span class="keyword">int</span> length1 = nums1.length<span class="comment">;</span></div><div class="line">        <span class="keyword">int</span> <span class="keyword">length2</span> = nums2.length<span class="comment">;</span></div><div class="line">        <span class="keyword">int</span> medianIndex = (length1+<span class="keyword">length2</span>)/<span class="number">2</span><span class="comment">; </span></div><div class="line">        <span class="keyword">double</span> median=<span class="number">0</span><span class="comment">;</span></div><div class="line">        <span class="keyword">int</span>[] array = new <span class="keyword">int</span>[length1+<span class="keyword">length2</span>]<span class="comment">;</span></div><div class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>,index=<span class="number">0</span><span class="comment">;</span></div><div class="line">        <span class="keyword">while</span>(index&lt;length1+<span class="keyword">length2</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(i&gt;=length1)&#123;</div><div class="line">                array[index++] = nums2[j++]<span class="comment">;</span></div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j&gt;=<span class="keyword">length2</span>)&#123;</div><div class="line">                array[index++] = nums1[i++]<span class="comment">;</span></div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&lt;length1&amp;&amp;j&lt;<span class="keyword">length2</span>)&#123;</div><div class="line">                <span class="keyword">if</span>(nums1[i]&gt;nums2[j])&#123;</div><div class="line">                    array[index++] = nums2[j++]<span class="comment">;</span></div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    array[index++] = nums1[i++]<span class="comment">;</span></div><div class="line">                &#125;</div><div class="line">            &#125;   </div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>((length1+<span class="keyword">length2</span>)%<span class="number">2</span>==<span class="number">1</span>)&#123;</div><div class="line">            median = array[medianIndex]<span class="comment">;</span></div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            median = (<span class="keyword">double</span>)(array[medianIndex<span class="number">-1</span>]+array[medianIndex])/<span class="number">2</span><span class="comment">;</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> median<span class="comment">;</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">public class Solution2 &#123;</div><div class="line">	public <span class="keyword">double</span> findMedianSortedArrays(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</div><div class="line">		<span class="keyword">int</span> length1 = nums1.length, <span class="keyword">length2</span> = nums2.length<span class="comment">;</span></div><div class="line">		<span class="keyword">if</span>((length1+<span class="keyword">length2</span>)%<span class="number">2</span>==<span class="number">0</span>) &#123;</div><div class="line">			<span class="keyword">return</span> (<span class="keyword">double</span>)(findKth(nums1,<span class="number">0</span>,length1,nums2,<span class="number">0</span>,<span class="keyword">length2</span>,(length1+<span class="keyword">length2</span>)/<span class="number">2</span>)+findKth(nums1,<span class="number">0</span>,length1,nums2,<span class="number">0</span>,<span class="keyword">length2</span>,(length1+<span class="keyword">length2</span>)/<span class="number">2</span>+<span class="number">1</span>))/<span class="number">2</span><span class="comment">;</span></div><div class="line">		&#125;<span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">return</span> findKth(nums1,<span class="number">0</span>,length1,nums2,<span class="number">0</span>,<span class="keyword">length2</span>,(length1+<span class="keyword">length2</span>)/<span class="number">2</span>+<span class="number">1</span>)<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	private <span class="keyword">int</span> findKth(<span class="keyword">int</span>[] nums1,<span class="keyword">int</span> start1,<span class="keyword">int</span> length1,<span class="keyword">int</span>[] nums2,<span class="keyword">int</span> start2,<span class="keyword">int</span> <span class="keyword">length2</span>, <span class="keyword">int</span> k)&#123;</div><div class="line">		<span class="comment">//mantain short array first</span></div><div class="line">		<span class="keyword">if</span>(length1&gt;<span class="keyword">length2</span>) <span class="keyword">return</span> findKth(nums2,start2,<span class="keyword">length2</span>,nums1,start1,length1,k)<span class="comment">;</span></div><div class="line">		<span class="keyword">if</span>(length1==<span class="number">0</span>) <span class="keyword">return</span> nums2[k<span class="number">-1</span>]<span class="comment">;</span></div><div class="line">		<span class="keyword">if</span>(k==<span class="number">1</span>) <span class="keyword">return</span> Math.min(nums1[start1],nums2[start2])<span class="comment">;</span></div><div class="line">		<span class="keyword">int</span> mid1 = Math.min(k/<span class="number">2</span>,length1)<span class="comment">;</span></div><div class="line">		<span class="keyword">int</span> mid2 = k-mid1<span class="comment">;</span></div><div class="line">		<span class="keyword">if</span>(nums1[start1+mid1<span class="number">-1</span>]&gt;=nums2[start2+mid2<span class="number">-1</span>]) &#123;</div><div class="line">			<span class="keyword">return</span> findKth(nums1,start1,length1,nums2,start2+mid2,<span class="keyword">length2</span>-mid2,k-mid2)<span class="comment">;</span></div><div class="line">		&#125;<span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">return</span> findKth(nums1,start1+mid1,length1-mid1,nums2,start2,<span class="keyword">length2</span>,k-mid1)<span class="comment">;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/median-of-two-sorted-arrays/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-M
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Edit Distance</title>
    <link href="http://xinli90.com/2016/09/21/Edit-Distance/"/>
    <id>http://xinli90.com/2016/09/21/Edit-Distance/</id>
    <published>2016-09-21T13:19:00.000Z</published>
    <updated>2016-09-21T14:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/edit-distance/" target="_blank" rel="external">Leetcode-Edit Distance</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)</p>
<p>You have the following 3 operations permitted on a word:</p>
<p>a) Insert a character<br>b) Delete a character<br>c) Replace a character     </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis-For-DP"><a href="#Analysis-For-DP" class="headerlink" title="Analysis For DP"></a>Analysis For DP</h3><ul>
<li>State: f[i][j] represents word1的前i个字母和word2的前j个字母相同所需要的操作数</li>
<li>Function: f[i][j] = MIN(f[i-1][j-1],f[i][j-1]+1,f[i-1][j]+1) (word1[i] == word2[j]) Or MIN(f[i-1][j],f[i][j-1],f[i-1][j-1])+1  (word1[i] != word2[j])</li>
<li>Initialize: f[i][0] = i; f[0][j] = j</li>
<li>Answer: f[word1.length()][word2.length()]</li>
</ul>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> minDistance(<span class="keyword">String</span> word1,<span class="keyword">String</span> word2) &#123;</div><div class="line">       <span class="keyword">int</span> length1 = word1.length();</div><div class="line">       <span class="keyword">int</span> length2 = word2.length();</div><div class="line">       <span class="keyword">int</span>[][] f = <span class="keyword">new</span> <span class="keyword">int</span>[length1+<span class="number">1</span>][length2+<span class="number">1</span>];</div><div class="line">       <span class="comment">//initialize</span></div><div class="line">       <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=length1; i++) &#123;</div><div class="line">       		f[i][<span class="number">0</span>] = i;</div><div class="line">       &#125;</div><div class="line">       <span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;=length2; j++) &#123;</div><div class="line">       		f[<span class="number">0</span>][j] = j;</div><div class="line">       &#125;</div><div class="line">       <span class="comment">//function</span></div><div class="line">       <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=length1; i++) &#123;</div><div class="line">       		<span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=length2; j++) &#123;</div><div class="line">       			<span class="built_in">if</span>(word1.charAt(i<span class="number">-1</span>)==word2.charAt(j<span class="number">-1</span>))&#123;</div><div class="line">       				f[i][j] = Math.<span class="built_in">min</span>(f[i<span class="number">-1</span>][j<span class="number">-1</span>],Math.<span class="built_in">min</span>(f[i<span class="number">-1</span>][j]+<span class="number">1</span>,f[i][j<span class="number">-1</span>]+<span class="number">1</span>));</div><div class="line">       			&#125;<span class="built_in">else</span> &#123;</div><div class="line">       				f[i][j] = Math.<span class="built_in">min</span>(f[i<span class="number">-1</span>][j<span class="number">-1</span>],Math.<span class="built_in">min</span>(f[i<span class="number">-1</span>][j],f[i][j<span class="number">-1</span>]))+<span class="number">1</span>;</div><div class="line">       			&#125;</div><div class="line">       			</div><div class="line">       		&#125;</div><div class="line">       &#125;</div><div class="line">       <span class="built_in">return</span> f[length1][length2];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/edit-distance/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Edit Distance&lt;/
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Strobogrammatic Number</title>
    <link href="http://xinli90.com/2016/09/20/Strobogrammatic-Number/"/>
    <id>http://xinli90.com/2016/09/20/Strobogrammatic-Number/</id>
    <published>2016-09-20T22:39:14.000Z</published>
    <updated>2016-09-20T22:56:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/strobogrammatic-number/" target="_blank" rel="external">Leetcode-Strobogrammatic Number</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).</p>
<p>Write a function to determine if a number is strobogrammatic. The number is represented as a string.</p>
<p>For example, the numbers “69”, “88”, and “818” are all strobogrammatic.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>Just checking the pairs, going inwards from the ends.</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    public boolean isStrobogrammatic(<span class="built_in">String</span> <span class="built_in">num</span>) &#123;</div><div class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>,j=<span class="built_in">num</span>.length()<span class="number">-1</span>; i&lt;=j; i++,j--) &#123;</div><div class="line">            <span class="keyword">if</span>(!<span class="string">"00 11 88 696"</span>.contains(<span class="built_in">num</span>.charAt(i)+<span class="string">""</span>+<span class="built_in">num</span>.charAt(j)))&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/strobogrammatic-number/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Strobo
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Longest Increasing Subsequence</title>
    <link href="http://xinli90.com/2016/09/20/Longest-Increasing-Subsequence/"/>
    <id>http://xinli90.com/2016/09/20/Longest-Increasing-Subsequence/</id>
    <published>2016-09-20T20:09:25.000Z</published>
    <updated>2016-09-20T21:23:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/longest-increasing-subsequence/" target="_blank" rel="external">Leetcode-Longest Increasing Subsequence</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an unsorted array of integers, find the length of longest increasing subsequence.</p>
<p>For example,     </p>
<p>Given [10, 9, 2, 5, 3, 7, 101, 18],<br>The longest increasing subsequence is [2, 3, 7, 101], therefore the length is 4. Note that there may be more than one LIS combination, it is only necessary for you to return the length.       </p>
<p>Your algorithm should run in O(n2) complexity.   </p>
<p>Follow up: Could you improve it to O(n log n) time complexity?</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1-For-DP"><a href="#Solution1-For-DP" class="headerlink" title="Solution1 For DP"></a>Solution1 For DP</h4><ul>
<li>State: f[i] represents the longest increasing subsequence</li>
<li>Function: f[i] = MAX(f[j]+1) &amp;&amp; j&lt;i &amp;&amp; nums[j]&lt;nums[i]</li>
<li>Initialize: f[i] = 1,</li>
<li>Answer: f[nums.length-1]</li>
</ul>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Mantain an array, use Binary search to insert or update this array.</li>
<li>We will get the longest array.</li>
</ol>
<figure class="highlight glsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">public class Solution1 &#123;</div><div class="line">    public <span class="type">int</span> lengthOfLIS(<span class="type">int</span>[] nums) &#123;</div><div class="line">        <span class="keyword">if</span>(nums==null || nums.<span class="built_in">length</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="type">int</span> <span class="built_in">length</span> = nums.<span class="built_in">length</span>;</div><div class="line">        <span class="type">int</span>[] f = new <span class="type">int</span>[<span class="built_in">length</span>];</div><div class="line">        <span class="type">int</span> <span class="built_in">max</span> = <span class="number">1</span>;</div><div class="line">        <span class="comment">//initialize</span></div><div class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">length</span>; i++) &#123;</div><div class="line">            f[i] = <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="comment">//function</span></div><div class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">length</span>; i++) &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</div><div class="line">                <span class="keyword">if</span>(nums[j]&lt;nums[i])&#123;</div><div class="line">                    f[i] = Math.<span class="built_in">max</span>(f[i],f[j]+<span class="number">1</span>);</div><div class="line">                    <span class="built_in">max</span> = Math.<span class="built_in">max</span>(<span class="built_in">max</span>,f[i]);</div><div class="line">                &#125;   </div><div class="line">            &#125;     </div><div class="line">        &#125;</div><div class="line">        <span class="comment">//answer</span></div><div class="line">        <span class="keyword">return</span> <span class="built_in">max</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public class Solution2 &#123;</div><div class="line">    public <span class="type">int</span> lengthOfLIS(<span class="type">int</span>[] nums) &#123;</div><div class="line">        <span class="keyword">if</span>(nums==null || nums.<span class="built_in">length</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="type">int</span> <span class="built_in">length</span> = <span class="number">0</span>;</div><div class="line">        <span class="type">int</span> tails[] = new <span class="type">int</span>[nums.<span class="built_in">length</span>+<span class="number">1</span>];</div><div class="line">        <span class="keyword">for</span>(<span class="type">int</span> num : nums) &#123;</div><div class="line">        	<span class="type">int</span> left = <span class="number">0</span>; </div><div class="line">        	<span class="type">int</span> right = <span class="built_in">length</span>;</div><div class="line">        	while(left&lt;right) &#123;</div><div class="line">        		<span class="type">int</span> mid = left+(right-left)/<span class="number">2</span>;</div><div class="line">        		<span class="keyword">if</span>(tails[mid]&lt;num)&#123;</div><div class="line">        			left = mid+<span class="number">1</span>;</div><div class="line">        		&#125;<span class="keyword">else</span> &#123;</div><div class="line">        			right = mid;</div><div class="line">        		&#125;</div><div class="line">        	&#125;</div><div class="line">        	tails[left] = num;</div><div class="line">        	<span class="keyword">if</span>(left==<span class="built_in">length</span>) ++<span class="built_in">length</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">length</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/longest-increasing-subsequence/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcod
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Valid Palindrome</title>
    <link href="http://xinli90.com/2016/09/20/Valid-Palindrome/"/>
    <id>http://xinli90.com/2016/09/20/Valid-Palindrome/</id>
    <published>2016-09-20T14:48:23.000Z</published>
    <updated>2016-09-20T17:39:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/valid-palindrome/" target="_blank" rel="external">Leetcode-Valid Palindrome</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p>
<p>For example, </p>
<p>“A man, a plan, a canal: Panama” is a palindrome.<br>“race a car” is not a palindrome.      </p>
<p>Note:      </p>
<p>Have you consider that the string might be empty? This is a good question to ask during an interview.</p>
<p>For the purpose of this problem, we define empty string as valid palindrome.      </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Mantain two pointers, iterate from start and end respectively and compare if its lowercase is equal.</li>
<li>When meet the character is not letter or digit, move to the next character.</li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Use Regex to replace all non digit or letter.</li>
<li>Reverse the string and compare to itself. </li>
</ol>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> boolean isPalindrome(<span class="type">String</span> s) &#123;</div><div class="line">		int <span class="keyword">left</span> = <span class="number">0</span>, <span class="keyword">right</span> = s.length()-<span class="number">1</span>;</div><div class="line">		<span class="keyword">while</span>(<span class="keyword">left</span>&lt;<span class="keyword">right</span>) &#123;</div><div class="line">			char c_left = s.charAt(<span class="keyword">left</span>);</div><div class="line">			char c_right = s.charAt(<span class="keyword">right</span>);</div><div class="line">			<span class="keyword">if</span>(!<span class="type">Character</span>.isLetterOrDigit(c_left))&#123;</div><div class="line">				<span class="keyword">left</span>++;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="type">Character</span>.isLetterOrDigit(c_right))&#123;</div><div class="line">				<span class="keyword">right</span>--;</div><div class="line">			&#125;<span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">if</span>(<span class="type">Character</span>.toLowerCase(c_left)!=<span class="type">Character</span>.toLowerCase(c_right))&#123;</div><div class="line">					<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">left</span>++;</div><div class="line">				<span class="keyword">right</span>--;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> boolean isPalindrome(<span class="type">String</span> s) &#123;</div><div class="line">		<span class="keyword">if</span>(s.length()==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">		s = s.replaceAll(<span class="string">"\\W"</span>,<span class="string">""</span>);</div><div class="line">		<span class="type">String</span> s2 = new <span class="type">StringBuilder</span>(s).<span class="built_in">reverse</span>().<span class="built_in">toString</span>();</div><div class="line">		<span class="keyword">return</span> s.equalsIgnoreCase(s2);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/valid-palindrome/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Valid Palind
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Palindrome Partitioning II</title>
    <link href="http://xinli90.com/2016/09/19/Palindrome-Partitioning-II/"/>
    <id>http://xinli90.com/2016/09/19/Palindrome-Partitioning-II/</id>
    <published>2016-09-20T00:08:20.000Z</published>
    <updated>2016-09-20T20:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/palindrome-partitioning-ii/" target="_blank" rel="external">Leetcode-Palindrome Partitioning II</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a string s, partition s such that every substring of the partition is a palindrome.</p>
<p>Return the minimum cuts needed for a palindrome partitioning of s.</p>
<p>For example, given s = “aab”,      </p>
<p>Return 1 since the palindrome partitioning [“aa”,”b”] could be produced using 1 cut.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis-For-DP"><a href="#Analysis-For-DP" class="headerlink" title="Analysis For DP"></a>Analysis For DP</h3><ul>
<li>State: f[i] represents the minimum cut in first i length of string</li>
<li>Function: f[i] = MIN(f[j]+1) &amp;&amp; 拿到j的最小，第j+1到第i个能组成回文即为f[j]+1</li>
<li>Initialize: f[i] = i-1,</li>
<li>Answer: f[s.length()]</li>
</ul>
<p>We use a two dimentional array to record if each substring is palindrome</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> minCut(<span class="keyword">String</span> s) &#123;</div><div class="line">    	<span class="keyword">int</span> length = s.length();</div><div class="line">        <span class="keyword">int</span>[] f = <span class="keyword">new</span> <span class="keyword">int</span>[length];</div><div class="line">        <span class="comment">//initialize</span></div><div class="line">        <span class="keyword">boolean</span>[][] isPalindrome = getPalindrome(s);</div><div class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;length; i++)&#123;</div><div class="line">        	f[i] = i<span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//function</span></div><div class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=length; i++) &#123;</div><div class="line">        	<span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</div><div class="line">        		<span class="built_in">if</span>(isPalindrome[j][i<span class="number">-1</span>]) &#123;</div><div class="line">        			f[i] = Math.<span class="built_in">min</span>(f[i],f[j]+<span class="number">1</span>);</div><div class="line">        		&#125;</div><div class="line">        	&#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//answer</span></div><div class="line">        <span class="built_in">return</span> f[length];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//row represents start, col represents end.</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span>[][] getPalindrome(<span class="keyword">String</span> s) &#123;</div><div class="line">    	<span class="keyword">int</span> length = s.length();</div><div class="line">    	<span class="keyword">boolean</span>[][] isPalindrome = <span class="keyword">new</span> <span class="keyword">boolean</span>[][];</div><div class="line">    	<span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;length; i++) &#123;</div><div class="line">    		isPalindrome[i][i] = true;</div><div class="line">    	&#125;</div><div class="line">    	<span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;length<span class="number">-1</span>; i++) &#123;</div><div class="line">    		isPalindrome[i][i+<span class="number">1</span>] = (s.charAt(i)==s.charAt(i+<span class="number">1</span>));</div><div class="line">    	&#125;</div><div class="line">    	<span class="comment">//record 1 length of substring,then 2... more and more to get the entire string.</span></div><div class="line">    	<span class="built_in">for</span>(<span class="keyword">int</span> <span class="built_in">size</span>=<span class="number">2</span>; <span class="built_in">size</span>&lt;length;<span class="built_in">size</span>++) &#123;</div><div class="line">    		<span class="built_in">for</span>(<span class="keyword">int</span> start=<span class="number">0</span>; start+<span class="built_in">size</span>&lt;length; start++) &#123;</div><div class="line">    			isPalindrome[start][start+<span class="built_in">size</span>] = isPalindrome[start+<span class="number">1</span>][start+<span class="built_in">size</span><span class="number">-1</span>]&amp;&amp;(s.charAt(start)==s.charAt(start+<span class="built_in">size</span>));</div><div class="line">    		&#125;</div><div class="line">    	&#125;</div><div class="line">    	<span class="built_in">return</span> isPalindrome;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/palindrome-partitioning-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Pa
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Palindrome Partitioning</title>
    <link href="http://xinli90.com/2016/09/19/Palindrome-Partitioning/"/>
    <id>http://xinli90.com/2016/09/19/Palindrome-Partitioning/</id>
    <published>2016-09-19T14:08:01.000Z</published>
    <updated>2016-09-19T15:09:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/palindrome-partitioning/" target="_blank" rel="external">Leetcode-Palindrome Partitioning</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a string s, partition s such that every substring of the partition is a palindrome.</p>
<p>Return all possible palindrome partitioning of s.</p>
<p>For example, given s = “aab”,     </p>
<p>Return</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">[</div><div class="line">  [<span class="string">"aa"</span>,<span class="string">"b"</span>],</div><div class="line">  [<span class="string">"a"</span>,<span class="string">"a"</span>,<span class="string">"b"</span>]</div><div class="line">]</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>Backtracking</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> class Solution &#123;</div><div class="line">	<span class="keyword">public</span> <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; partition(<span class="built_in">String</span> s) &#123;</div><div class="line">		<span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; lists = <span class="literal">new</span> ArrayList&lt;&gt;();</div><div class="line">		<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; <span class="built_in">list</span> = <span class="literal">new</span> ArrayList&lt;&gt;();</div><div class="line">		helper(s,<span class="number">0</span>,lists,<span class="built_in">list</span>);</div><div class="line">		<span class="keyword">return</span> lists;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">public</span> <span class="literal">void</span> helper(<span class="built_in">String</span> s, int start, <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; lists,<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; <span class="built_in">list</span>) &#123;</div><div class="line">		<span class="keyword">if</span>(index==s.length()) &#123;</div><div class="line">			lists.add(<span class="literal">new</span> ArrayList&lt;<span class="built_in">String</span>&gt;(<span class="built_in">list</span>));</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		for(int i=start; i&lt;s.length(); i++) &#123;</div><div class="line">			<span class="keyword">if</span>(isPalindrome(s,start,i)) &#123;</div><div class="line">				<span class="built_in">list</span>.add(s.substring(start,i+<span class="number">1</span>));</div><div class="line">				helper(s,i+<span class="number">1</span>,lists,<span class="built_in">list</span>);</div><div class="line">				<span class="built_in">list</span>.remove(<span class="built_in">list</span>.size()<span class="number">-1</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">private</span> <span class="built_in">boolean</span> isPalindrome(<span class="built_in">String</span> p,int left,int right) &#123;</div><div class="line">        <span class="keyword">while</span>(left&lt;right) &#123;</div><div class="line">            <span class="keyword">if</span>(p.charAt(left++) != p.charAt(right--))&#123;</div><div class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/palindrome-partitioning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Palin
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Jump Game II</title>
    <link href="http://xinli90.com/2016/09/18/Jump-Game-II/"/>
    <id>http://xinli90.com/2016/09/18/Jump-Game-II/</id>
    <published>2016-09-19T01:22:33.000Z</published>
    <updated>2016-09-19T02:12:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/jump-game-ii/" target="_blank" rel="external">Leetcode-Jump Game II</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p>
<p>Each element in the array represents your maximum jump length at that position.</p>
<p>Your goal is to reach the last index in the minimum number of jumps.</p>
<p>For example:     </p>
<p>Given array A = [2,3,1,1,4]        </p>
<p>The minimum number of jumps to reach the last index is 2. (Jump 1 step from index 0 to 1, then 3 steps to the last index.)</p>
<p>Note:<br>You can assume that you can always reach the last index.    </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1-For-DP"><a href="#Solution1-For-DP" class="headerlink" title="Solution1 For DP"></a>Solution1 For DP</h4><p>It is easy to time limit exceeded. The time complexity is O(n^2)</p>
<ul>
<li>State: f[i] represents the minimum number which we jump from start to i.</li>
<li>Function: f[i] = Min(f[j]+1,j&lt;i &amp;&amp; j could jump to i)</li>
<li>Initialize: f[0] = 0</li>
<li>Answer: f[nums.length-1]</li>
</ul>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><p>Each time we move to the farthest position which we can get in the previous range. It will be the minimum steps.</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution1 &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> canJump(<span class="keyword">int</span>[] nums) &#123;</div><div class="line">        <span class="keyword">int</span> f[] = <span class="keyword">new</span> <span class="keyword">int</span>[nums.length];</div><div class="line">        <span class="comment">//initialize</span></div><div class="line">        f[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;nums.length; i++)&#123;</div><div class="line">        	f[i] = Integer.MAX_VALUE;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//function</span></div><div class="line">        <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;nums.length; i++) &#123;</div><div class="line">            <span class="built_in">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</div><div class="line">                <span class="built_in">if</span>(f[j]!=Integer.MAX_VALUE &amp;&amp; j+nums[j]&gt;=i)&#123;</div><div class="line">                    f[i] = Math.<span class="built_in">min</span>(f[i], f[j]+<span class="number">1</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        <span class="comment">//answer</span></div><div class="line">        <span class="built_in">return</span> f[nums.length<span class="number">-1</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution2 &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> canJump(<span class="keyword">int</span>[] nums) &#123;</div><div class="line">    	<span class="keyword">int</span> start=<span class="number">0</span>, <span class="built_in">end</span>=<span class="number">0</span>, steps = <span class="number">0</span>;</div><div class="line">    	<span class="keyword">int</span> length = nums.length;</div><div class="line">    	<span class="built_in">while</span>(<span class="built_in">end</span>&lt;length<span class="number">-1</span>) &#123;</div><div class="line">    		steps++;</div><div class="line">    		<span class="keyword">int</span> farthest = <span class="built_in">end</span>;</div><div class="line">    		<span class="built_in">for</span>(<span class="keyword">int</span> i=start; i&lt;=<span class="built_in">end</span>; i++) &#123;</div><div class="line">    			<span class="built_in">if</span>(i+nums[i] &gt; farthest) &#123;</div><div class="line">    				farthest = i+nums[i];</div><div class="line">    			&#125;</div><div class="line">    		&#125;</div><div class="line">    		start = <span class="built_in">end</span>+<span class="number">1</span>;</div><div class="line">    		<span class="built_in">end</span> = farthest;</div><div class="line">    	&#125;</div><div class="line">    	<span class="built_in">return</span> steps;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/jump-game-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Jump Game II&lt;/a&gt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Jump Game</title>
    <link href="http://xinli90.com/2016/09/18/Jump-Game/"/>
    <id>http://xinli90.com/2016/09/18/Jump-Game/</id>
    <published>2016-09-19T00:48:44.000Z</published>
    <updated>2016-09-19T01:21:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/jump-game/" target="_blank" rel="external">Leetcode-Jump Game</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p>
<p>Each element in the array represents your maximum jump length at that position.</p>
<p>Determine if you are able to reach the last index.     </p>
<p>For example:   </p>
<p>A = [2,3,1,1,4], return true.     </p>
<p>A = [3,2,1,0,4], return false.     </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1-For-DP"><a href="#Solution1-For-DP" class="headerlink" title="Solution1 For DP"></a>Solution1 For DP</h4><p>It is easy to time limit exceeded. The time complexity is O(n^2)</p>
<ul>
<li>State: f[i] represents if we can get to the i location.</li>
<li>Function: if(f[i-1] &amp;&amp; nums[i-1]&gt;0)f[i] = true, or f[i]=false;</li>
<li>Initialize: f[0] = true</li>
<li>Answer: f[nums.length-1]</li>
</ul>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><p>Iterate teh array, get the farthest position and check if it can get the last position.<br>The time complexity is O(n).</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canJump</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> f[] = <span class="keyword">new</span> <span class="keyword">boolean</span>[nums.length];</div><div class="line">        <span class="comment">//initialize</span></div><div class="line">        f[<span class="number">0</span>] = <span class="keyword">true</span>;</div><div class="line">        </div><div class="line">        <span class="comment">//function</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;nums.length; i++) &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++) &#123;</div><div class="line">                <span class="keyword">if</span>(f[j] &amp;&amp; j+nums[j]&gt;=i)&#123;</div><div class="line">                    f[i] = <span class="keyword">true</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        <span class="comment">//answer</span></div><div class="line">        <span class="keyword">return</span> f[nums.length-<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canJump</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</div><div class="line">    	<span class="keyword">if</span>(nums==<span class="keyword">null</span> || nums.length==<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    	<span class="keyword">int</span> farthest = nums[<span class="number">0</span>];</div><div class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;nums.length; i++) &#123;</div><div class="line">    		<span class="keyword">if</span>(i &lt;= farthest &amp;&amp; i+nums[i] &gt; farthest) &#123;</div><div class="line">    			farthest = i+nums[i];</div><div class="line">    		&#125;</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">return</span> farthest &gt;= nums.length-<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/jump-game/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Jump Game&lt;/a&gt;.&lt;/p&gt;

    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
</feed>
