<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xinli&#39;s Blog</title>
  <subtitle>Coding World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xinli90.com/"/>
  <updated>2016-10-24T15:37:05.000Z</updated>
  <id>http://xinli90.com/</id>
  
  <author>
    <name>Xinli Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Best Time to Buy and Sell Stock with Cooldown</title>
    <link href="http://xinli90.com/2016/10/24/Best-Time-to-Buy-and-Sell-Stock-with-Cooldown/"/>
    <id>http://xinli90.com/2016/10/24/Best-Time-to-Buy-and-Sell-Stock-with-Cooldown/</id>
    <published>2016-10-24T14:27:26.000Z</published>
    <updated>2016-10-24T15:37:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/" target="_blank" rel="external">Leetcode - Best Time to Buy and Sell Stock with Cooldown</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>
<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times) with the following restrictions:     </p>
<p>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).<br>After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)</p>
<p>Example:</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">prices</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">2</span>]</div><div class="line"><span class="attr">maxProfit</span> = <span class="number">3</span></div><div class="line"><span class="attr">transactions</span> = [buy, sell, cooldown, buy, sell]</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-DP"><a href="#Solution-DP" class="headerlink" title="Solution:DP"></a>Solution:DP</h4><ul>
<li>The natural states for this problem is the 3 possible transactions: <code>buy</code>,<code>sell</code>,<code>rest</code>. For each of them we make an array, <code>buy[n]</code>,<code>sell[n]</code> and <code>rest[n]</code>. And it means before day <code>i</code> the maxProfit for any sequence end with <code>buy</code> or <code>sell</code> or <code>rest</code>.</li>
<li>Function:</li>
</ul>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">buy<span class="string">[i]</span> = Max(buy<span class="string">[i-1]</span>, rest<span class="string">[i-1]</span>-price);</div><div class="line">sell<span class="string">[i]</span> = Max(sell<span class="string">[i-1]</span>, buy<span class="string">[i-1]</span> + price);</div><div class="line">rest<span class="string">[i]</span> = Max(rest<span class="string">[i-1]</span>, buy<span class="string">[i-1]</span>, sell<span class="string">[i-1]</span>);</div></pre></td></tr></table></figure>
<p>Notice: </p>
<p>the fact that <code>buy[i] &lt;= rest[i]</code> , so <code>rest[i] = Max(rest[i-1], sell[i-1])</code>.</p>
<p>the fact that <code>rest[i] &lt;= sell[i]</code> , so  <code>rest[i] = sell[i-1]</code>.</p>
<ul>
<li>So we have 2 functions instead of 3:</li>
</ul>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">buy<span class="string">[i]</span> = Max(buy<span class="string">[i-1]</span>, sell<span class="string">[i-2]</span>-price);</div><div class="line">sell<span class="string">[i]</span> = Max(sell<span class="string">[i-1]</span>, buy<span class="string">[i-1]</span> + price);</div></pre></td></tr></table></figure>
<ul>
<li>Since states of day <code>i</code> relies on <code>i-1</code> and <code>i-2</code>, we can reduce the O(n) space to O(1).</li>
</ul>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution &#123;</div><div class="line">	<span class="keyword">public</span> <span class="built_in">int</span> maxProfit(<span class="built_in">int</span>[] prices) &#123;</div><div class="line">		<span class="built_in">int</span> sell = <span class="number">0</span>, preSell = <span class="number">0</span>;</div><div class="line">		<span class="built_in">int</span> buy = <span class="keyword">Integer</span>.MIN_VALUE, preBuy = <span class="keyword">Integer</span>.MIN_VALUE;</div><div class="line">		for(<span class="built_in">int</span> price : prices) &#123;</div><div class="line">			preBuy = buy;</div><div class="line">			buy = Math.<span class="built_in">max</span>(preBuy, preSell - prices[i]);</div><div class="line">			preSell = sell;</div><div class="line">			sell = Math.<span class="built_in">max</span>(preBuy + prices[i], preSell);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> sell;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/&quot; target=&quot;_blank&quot; rel=&quot;ex
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Best Time to Buy and Sell Stock IV</title>
    <link href="http://xinli90.com/2016/10/23/Best-Time-to-Buy-and-Sell-Stock-IV/"/>
    <id>http://xinli90.com/2016/10/23/Best-Time-to-Buy-and-Sell-Stock-IV/</id>
    <published>2016-10-24T00:31:39.000Z</published>
    <updated>2016-10-24T04:11:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/" target="_blank" rel="external">Leetcode - Best Time to Buy and Sell Stock IV</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>
<p>Design an algorithm to find the maximum profit. You may complete at most k transactions.</p>
<p>Note:<br>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-DP"><a href="#Solution-DP" class="headerlink" title="Solution:DP"></a>Solution:DP</h4><ul>
<li>State: profit[i][j] represents the maximum profit until i-th price and j transactions.</li>
<li>Function: profit[i][j] = MAX(profit[i-1][j], prices[i]-prices[i’]+profit[i’][j-1]) (i’ is in 0 - i range)</li>
<li>Initialize: profit[i][0] = 0, profit[0][j] = 0.</li>
<li>Answer: profit[prices.length-1][k]</li>
</ul>
<p>tmpMax = Math.max(tmpMax, profit[i-1][j-1] - prices[i]) means the maximum profit of just doing at most j-1 transactions, using at most first i-1 prices, and buying the stock at prices[i].</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span>[] prices)</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span>(k &gt;= prices.length/<span class="number">2</span>) <span class="function"><span class="keyword">return</span> <span class="title">quickSort</span><span class="params">(prices)</span></span>;</div><div class="line">		<span class="comment">//initialize</span></div><div class="line">		<span class="keyword">int</span>[][] profit = <span class="keyword">new</span> <span class="keyword">int</span>[prices.length][k+<span class="number">1</span>];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++) &#123;</div><div class="line">			<span class="keyword">int</span> tmpMax = -prices[<span class="number">0</span>];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;prices.length; i++) &#123;</div><div class="line">				profit[i][j] = Math.max(profit[i<span class="number">-1</span>][j], prices[i]+tmpMax);</div><div class="line">				tmpMax = Math.max(tmpMax, profit[i<span class="number">-1</span>][j<span class="number">-1</span>] - prices[i]);</div><div class="line">			&#125;</div><div class="line">		&#125;	</div><div class="line">		<span class="keyword">return</span> profit[prices.length<span class="number">-1</span>][k];</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">private</span> <span class="function"><span class="keyword">int</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> len = prices.length, profit = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;len; i++) &#123;</div><div class="line">			<span class="keyword">if</span>(prices[i]&gt;prices[i<span class="number">-1</span>]) &#123;</div><div class="line">				profit += prices[i]-prices[i<span class="number">-1</span>];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> profit;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lee
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Best Time to Buy and Sell Stock III</title>
    <link href="http://xinli90.com/2016/10/23/Best-Time-to-Buy-and-Sell-Stock-III/"/>
    <id>http://xinli90.com/2016/10/23/Best-Time-to-Buy-and-Sell-Stock-III/</id>
    <published>2016-10-23T19:53:01.000Z</published>
    <updated>2016-10-24T00:29:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/" target="_blank" rel="external">Leetcode - Best Time to Buy and Sell Stock III</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>
<p>Design an algorithm to find the maximum profit. You may complete at most two transactions.</p>
<p>Note:<br>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><ol>
<li>firstBuy: means we have to borrow money from others, we need borrow as less as possible to get the maximum profit. But the value is negative(-price), so we should pick max one.</li>
<li>firstSell: after buy stock, we need sell stock in a higher price. So profit = price - |firstBuy| = price + firstBuy.</li>
<li>secondBuy: after first transaction, we get the profit 即 firstSell, then similar with firstBuy, we get firstSell-price.</li>
<li>secondSell: similar with firstSell, we get the profit is price + secondBuy.</li>
</ol>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution1 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="built_in">int</span> maxProfit(<span class="built_in">int</span>[] prices) &#123;</div><div class="line">		<span class="built_in">int</span> firstBuy = <span class="keyword">Integer</span>.MIN_VALUE, firstSell = <span class="number">0</span>;</div><div class="line">		<span class="built_in">int</span> secondBuy = <span class="keyword">Integer</span>.MIN_VALUE, secondSell = <span class="number">0</span>;</div><div class="line">		for(<span class="built_in">int</span> price : prices) &#123;</div><div class="line">			firstBuy = Math.<span class="built_in">max</span>(firstBuy, -price);</div><div class="line">			firstSell = Math.<span class="built_in">max</span>(firstSell, price + firstBuy);</div><div class="line">			secondBuy = Math.<span class="built_in">max</span>(secondBuy, firstSell - price);</div><div class="line">			secondSell = Math.<span class="built_in">max</span>(secondSell, price + secondBuy);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> secondSell;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Le
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Best Time to Buy and Sell Stock II</title>
    <link href="http://xinli90.com/2016/10/21/Best-Time-to-Buy-and-Sell-Stock-II/"/>
    <id>http://xinli90.com/2016/10/21/Best-Time-to-Buy-and-Sell-Stock-II/</id>
    <published>2016-10-21T16:51:24.000Z</published>
    <updated>2016-10-23T19:51:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="external">Leetcode - Best Time to Buy and Sell Stock II</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>
<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times). However, you may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ul>
<li>State: f[i] represents the maximum profit.</li>
<li>Function: f[i] = f[i-1] + (if(prices[i]&gt;prices[i-1])prices[i] - prices[i-1]), update stock to the current one.</li>
<li>Initialize: f[0] = 0, stock = prices[0]</li>
<li>Answer: f[nums.length-1]</li>
</ul>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><p>Just add all positive difference between two adjacent elements.</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Solution1</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span>(<span class="params"><span class="keyword">int</span>[] prices</span>) </span>&#123;</div><div class="line">		<span class="keyword">if</span>(prices==<span class="literal">null</span> || prices.length&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span>[] profit = <span class="keyword">new</span> <span class="keyword">int</span>[prices.length];</div><div class="line">		profit[<span class="number">0</span>] = <span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> stock = prices[<span class="number">0</span>];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i &lt; prices.length; i++) &#123;</div><div class="line">			<span class="keyword">if</span>(prices[i]&gt;stock) &#123;</div><div class="line">				profit[i] = profit[i<span class="number">-1</span>] + (prices[i]-stock);</div><div class="line">			&#125;<span class="keyword">else</span> &#123;</div><div class="line">				profit[i] = profit[i<span class="number">-1</span>];</div><div class="line">			&#125;</div><div class="line">			stock = prices[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> profit[prices.length<span class="number">-1</span>];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Solution2</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span>(<span class="params"><span class="keyword">int</span>[] prices</span>) </span>&#123;</div><div class="line">		<span class="keyword">if</span>(prices==<span class="literal">null</span> || prices.length&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> profit = <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i &lt; prices.length; i++) &#123;</div><div class="line">			<span class="keyword">if</span>(prices[i]&gt;prices[i<span class="number">-1</span>]) &#123;</div><div class="line">				profit += prices[i] - prices[i<span class="number">-1</span>];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> profit;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lee
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Best Time to Buy and Sell Stock</title>
    <link href="http://xinli90.com/2016/10/21/Best-Time-to-Buy-and-Sell-Stock/"/>
    <id>http://xinli90.com/2016/10/21/Best-Time-to-Buy-and-Sell-Stock/</id>
    <published>2016-10-21T13:21:12.000Z</published>
    <updated>2016-10-24T14:30:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="external">Leetcode - Best Time to Buy and Sell Stock</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Say you have an array for which the ith element is the price of a given stock on day i.</p>
<p>If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>
<p>Example 1:</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Input</span>: [7, 1, 5, 3, 6, 4]</div><div class="line"><span class="attribute">Output</span>: 5</div><div class="line"></div><div class="line"><span class="lsl">max. difference = <span class="number">6</span><span class="number">-1</span> = <span class="number">5</span> (not <span class="number">7</span><span class="number">-1</span> = <span class="number">6</span>, as selling price needs to be larger than buying price)</span></div></pre></td></tr></table></figure>
<p>Example 2:</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Input</span>: [7, 6, 4, 3, 1]</div><div class="line"><span class="attribute">Output</span>: 0</div><div class="line"></div><div class="line"><span class="livescript">In <span class="keyword">this</span> <span class="keyword">case</span>, <span class="literal">no</span> transaction <span class="keyword">is</span> done, i.e. max profit = <span class="number">0.</span></span></div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>For each element, compare with other elements and find out the maximum one.</li>
<li>Time complexity is O(n^2)</li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Record a minimum price and calculate its difference if the current is greater than min Price.</li>
<li>Time complexity is O(n)</li>
</ol>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution1 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">int</span> maxProfit(<span class="keyword">int</span>[] prices) &#123;</div><div class="line">		<span class="keyword">int</span> <span class="built_in">max</span> = <span class="number">0</span>, minPrice = Integer.MAX_VALUE; </div><div class="line">		<span class="built_in">for</span>(<span class="keyword">int</span> price : prices) &#123;</div><div class="line">			<span class="built_in">if</span>(minPrice&gt;price) &#123;</div><div class="line">				minPrice = price;</div><div class="line">			&#125;<span class="built_in">else</span> &#123;</div><div class="line">				<span class="built_in">max</span> = Math.<span class="built_in">max</span>(price-minPrice,<span class="built_in">max</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> <span class="built_in">max</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/best-time-to-buy-and-sell-stock/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetco
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Search in Rotated Sorted Array</title>
    <link href="http://xinli90.com/2016/10/20/Search-in-Rotated-Sorted-Array/"/>
    <id>http://xinli90.com/2016/10/20/Search-in-Rotated-Sorted-Array/</id>
    <published>2016-10-20T19:58:56.000Z</published>
    <updated>2016-10-20T20:25:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/search-in-rotated-sorted-array/" target="_blank" rel="external">Leetcode - Search in Rotated Sorted Array</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Suppose a sorted array is rotated at some pivot unknown to you beforehand.</p>
<p>(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).</p>
<p>You are given a target value to search. If found in the array return its index, otherwise return -1.</p>
<p>You may assume no duplicate exists in the array.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><p>Iterate through the array to find the target.</p>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Find Min index</li>
<li>compare target with the last element to ensure left and right index.</li>
<li>Use Binary Search to find the target.</li>
</ol>
<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public <span class="built_in">int</span> <span class="built_in">search</span>(<span class="built_in">int</span>[] nums, <span class="built_in">int</span> target) &#123;</div><div class="line">         for(<span class="built_in">int</span> i=<span class="number">0</span>; i&lt;nums.length; i++) &#123;</div><div class="line">             <span class="built_in">if</span>(nums[i]==target) &#123;</div><div class="line">                 return i;</div><div class="line">             &#125;</div><div class="line">         &#125;</div><div class="line">         return -<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public class Solution2 &#123;</div><div class="line">	public <span class="built_in">int</span> <span class="built_in">search</span>(<span class="built_in">int</span>[] nums, <span class="built_in">int</span> target) &#123;</div><div class="line">		<span class="built_in">int</span> minIndex = findMinIndex(nums);</div><div class="line">		<span class="built_in">if</span>(nums[minIndex] == target) return minIndex;</div><div class="line">		<span class="built_in">int</span> sie = nums.length;</div><div class="line">		<span class="built_in">int</span> <span class="built_in">left</span> = nums[size-<span class="number">1</span>]&gt;=target? minIndex+<span class="number">1</span> <span class="symbol">:</span> <span class="number">0</span>;</div><div class="line">		<span class="built_in">int</span> <span class="built_in">right</span> = nums[size-<span class="number">1</span>]&gt;=target ? size-<span class="number">1</span> <span class="symbol">:</span> minIndex-<span class="number">1</span>;</div><div class="line">		//<span class="built_in">left</span>和<span class="built_in">right</span>边界都在变化，所以需要验证<span class="built_in">left</span>==<span class="built_in">right</span>的情况，防止数组size为<span class="number">2</span>的情况</div><div class="line">		while(<span class="built_in">left</span> &lt;= <span class="built_in">right</span>) &#123;</div><div class="line">			<span class="built_in">int</span> <span class="built_in">mid</span> = <span class="built_in">left</span> + (<span class="built_in">right</span>-<span class="built_in">left</span>)/<span class="number">2</span>;</div><div class="line">			<span class="built_in">if</span>(nums[<span class="built_in">mid</span>] == target) return <span class="built_in">mid</span>;</div><div class="line">			else <span class="built_in">if</span>(nums[<span class="built_in">mid</span>] &gt; target) <span class="built_in">right</span> = <span class="built_in">mid</span>-<span class="number">1</span>;</div><div class="line">			else <span class="built_in">left</span> = <span class="built_in">mid</span>+<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		return -<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public <span class="built_in">int</span> findMinIndex(<span class="built_in">int</span>[] nums) &#123;</div><div class="line">		<span class="built_in">int</span> <span class="built_in">left</span> = <span class="number">0</span>, <span class="built_in">right</span> = nums.length-<span class="number">1</span>;</div><div class="line">		//<span class="built_in">left</span> = <span class="built_in">mid</span>+<span class="number">1</span>,<span class="built_in">right</span>=<span class="built_in">mid</span> 为了保证只有<span class="built_in">left</span>边界变化，确保最后返回<span class="built_in">left</span>得到正确结果</div><div class="line">		while(<span class="built_in">left</span> &lt; <span class="built_in">right</span>) &#123;</div><div class="line">			<span class="built_in">int</span> <span class="built_in">mid</span> = <span class="built_in">left</span> + (<span class="built_in">right</span>-<span class="built_in">left</span>)/<span class="number">2</span>;</div><div class="line">			<span class="built_in">if</span>(nums[<span class="built_in">mid</span>]&gt;nums[<span class="built_in">right</span>]) &#123;</div><div class="line">				<span class="built_in">left</span> = <span class="built_in">mid</span>+<span class="number">1</span>;</div><div class="line">			&#125;else &#123;</div><div class="line">				<span class="built_in">right</span> = <span class="built_in">mid</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		return <span class="built_in">left</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/search-in-rotated-sorted-array/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcod
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Find Minimum in Rotated Sorted Array</title>
    <link href="http://xinli90.com/2016/10/20/Find-Minimum-in-Rotated-Sorted-Array/"/>
    <id>http://xinli90.com/2016/10/20/Find-Minimum-in-Rotated-Sorted-Array/</id>
    <published>2016-10-20T18:06:54.000Z</published>
    <updated>2016-10-20T18:33:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/first-bad-version/" target="_blank" rel="external">Leetcode-First Bad Version</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Suppose a sorted array is rotated at some pivot unknown to you beforehand.   </p>
<p>(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).    </p>
<p>Find the minimum element.    </p>
<p>You may assume no duplicate exists in the array.       </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Iterate through the array to find out the element which is greater than the next one.</li>
<li>Time complexity is O(n)</li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Binary search to find out this element</li>
<li>If the middle one is less than right one, assign mid to right index.</li>
<li>If the middle one is greater than right one, assign mid+1 to left index.</li>
<li>Time complexity is O(lgn)</li>
</ol>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> int findMin(int[] nums) &#123;</div><div class="line">        <span class="keyword">for</span>(int i=<span class="number">0</span>; i&lt;nums.length-<span class="number">1</span>; i++) &#123;</div><div class="line">        	<span class="keyword">if</span>(nums[i] &gt; nums[i+<span class="number">1</span>]) &#123;</div><div class="line">        		<span class="keyword">return</span> nums[i+<span class="number">1</span>];</div><div class="line">        	&#125;</div><div class="line">        &#125;   </div><div class="line">        <span class="comment">//if sorted array is not rotated or rotated to the original one</span></div><div class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>]; </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> int findMin(int[] nums) &#123;</div><div class="line">    	int <span class="keyword">left</span> = <span class="number">0</span>, <span class="keyword">right</span> = nums.length-<span class="number">1</span>;</div><div class="line">    	<span class="keyword">while</span>(<span class="keyword">left</span> &lt; <span class="keyword">right</span>) &#123;</div><div class="line">    		int mid = <span class="keyword">left</span> + (<span class="keyword">right</span>-<span class="keyword">left</span>)/<span class="number">2</span>;</div><div class="line">    		<span class="keyword">if</span>(nums[mid] &gt; nums[<span class="keyword">right</span>]) &#123;</div><div class="line">    			<span class="keyword">left</span> = mid+<span class="number">1</span>;</div><div class="line">    		&#125;<span class="keyword">else</span> &#123;</div><div class="line">    			<span class="keyword">right</span> = mid;</div><div class="line">    		&#125;</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">return</span> nums[<span class="keyword">left</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/first-bad-version/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-First Bad V
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Rotate Array</title>
    <link href="http://xinli90.com/2016/10/19/Rotate-Array/"/>
    <id>http://xinli90.com/2016/10/19/Rotate-Array/</id>
    <published>2016-10-20T03:31:27.000Z</published>
    <updated>2016-10-20T15:46:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/rotate-array/" target="_blank" rel="external">Leetcode-Rotate Array</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Rotate an array of n elements to the right by k steps.</p>
<p>For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>rotete one by one.</li>
<li>Time complexity is O(k*n), Space complexity is O(1)     </li>
<li>TIme Limit Exceeded      </li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Use an array to store the last k elements first</li>
<li>shift all remaining elements to the right</li>
<li>put k elements to the left.</li>
<li>Time complexity is O(n), Space complexity is O(k)</li>
</ol>
<h4 id="Solution3"><a href="#Solution3" class="headerlink" title="Solution3"></a>Solution3</h4><ol>
<li>Reverse first size - k elements</li>
<li>Reverse last k elements</li>
<li>Reverse all elements</li>
<li>Time complexity is O(n), Space complexity is O(1)</li>
</ol>
<h4 id="Solution4"><a href="#Solution4" class="headerlink" title="Solution4"></a>Solution4</h4><ol>
<li>create a new array to store all elements</li>
<li>reasign the value into the original array</li>
<li>Time complexity is O(n), Space complexity is O(n)</li>
</ol>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution1 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> rotate(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</div><div class="line">		<span class="keyword">int</span> <span class="keyword">size</span> = nums.length;</div><div class="line">		<span class="keyword">while</span>(k&gt;<span class="number">0</span>) &#123;</div><div class="line">			<span class="keyword">int</span> target = nums[<span class="keyword">size</span>-<span class="number">1</span>];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="keyword">size</span>-<span class="number">1</span>; i&gt;<span class="number">0</span>; i++)&#123;</div><div class="line">				nums[i] = nums[i-<span class="number">1</span>];</div><div class="line">			&#125;</div><div class="line">			nums[<span class="number">0</span>] = target;</div><div class="line">			k--;</div><div class="line">		&#125; </div><div class="line">	&#125;	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution2 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> rotate(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</div><div class="line">		<span class="keyword">int</span>[] tempArr = <span class="keyword">new</span> <span class="keyword">int</span>[k];</div><div class="line">		<span class="keyword">int</span> <span class="keyword">size</span> = nums.length;</div><div class="line">		<span class="keyword">if</span>(k&gt;<span class="keyword">size</span>) k =k%<span class="keyword">size</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="keyword">size</span>-k; i&lt;<span class="keyword">size</span>; i++) &#123;</div><div class="line">			tempArr[i-(<span class="keyword">size</span>-k)] = nums[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="keyword">size</span>-<span class="number">1</span>; i&gt;=k; i--) &#123;</div><div class="line">			nums[i] = nums[i-k];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++) &#123;</div><div class="line">			nums[i] = tempArr[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution3 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> rotate(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</div><div class="line">		<span class="keyword">int</span> <span class="keyword">size</span> = nums.length;</div><div class="line">		<span class="keyword">if</span>(k&gt;<span class="keyword">size</span>) k =k%<span class="keyword">size</span>;</div><div class="line">		<span class="keyword">reverse</span>(nums,<span class="number">0</span>,<span class="keyword">size</span>-k-<span class="number">1</span>);</div><div class="line">		<span class="keyword">reverse</span>(nums,<span class="keyword">size</span>-k,<span class="keyword">size</span>-<span class="number">1</span>);</div><div class="line">		<span class="keyword">reverse</span>(nums,<span class="number">0</span>,<span class="keyword">size</span>-<span class="number">1</span>);</div><div class="line">	&#125;	</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="keyword">reverse</span>(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> left,<span class="keyword">int</span> right) &#123;</div><div class="line">		<span class="keyword">while</span>(left &lt; right) &#123;</div><div class="line">			<span class="keyword">int</span> temp = nums[left];</div><div class="line">			nums[left] = nums[right];</div><div class="line">			nums[right] = temp;</div><div class="line">			left++;</div><div class="line">			right--;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution4 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> rotate(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</div><div class="line">		<span class="keyword">int</span> <span class="keyword">size</span> = nums.length;</div><div class="line">		<span class="keyword">int</span>[] copyArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="keyword">size</span>];</div><div class="line">		<span class="keyword">if</span>(k&gt;<span class="keyword">size</span>) k =k%<span class="keyword">size</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">size</span>; i++) &#123;</div><div class="line">			copyArray[i] = nums[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="keyword">size</span>; i++) &#123;</div><div class="line">			nums[(i+k)%<span class="keyword">size</span>] = copyArray[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/rotate-array/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Rotate Array&lt;/a&gt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Remove Element</title>
    <link href="http://xinli90.com/2016/10/19/Remove-Element/"/>
    <id>http://xinli90.com/2016/10/19/Remove-Element/</id>
    <published>2016-10-20T03:17:55.000Z</published>
    <updated>2016-10-20T03:26:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/remove-element/" target="_blank" rel="external">Leetcode - Remove Element</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an array and a value, remove all instances of that value in place and return the new length.</p>
<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>
<p>The order of elements can be changed. It doesn’t matter what you leave beyond the new length.</p>
<p>Example:<br>Given input array nums = [3,2,2,3], val = 3</p>
<p>Your function should return length = 2, with the first two elements of nums being 2.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><ol>
<li>Maintain one pointer, point to the first location</li>
<li>Iterate each element, if the element is the same with target, do nothing</li>
<li>If not, replace the value which the pointer points using this element.</li>
</ol>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> removeElement(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> val) &#123;</div><div class="line">    	<span class="keyword">int</span> <span class="keyword">index</span>=<span class="number">0</span>;</div><div class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> num : nums) &#123;</div><div class="line">    		<span class="keyword">if</span>(num != val) &#123;</div><div class="line">    			nums[<span class="keyword">index</span>++] = num;</div><div class="line">    		&#125;</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">return</span> <span class="keyword">index</span>;</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/remove-element/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode - Remove Eleme
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Maximum XOR of Two Numbers in an Array</title>
    <link href="http://xinli90.com/2016/10/19/Maximum-XOR-of-Two-Numbers-in-an-Array/"/>
    <id>http://xinli90.com/2016/10/19/Maximum-XOR-of-Two-Numbers-in-an-Array/</id>
    <published>2016-10-20T02:40:39.000Z</published>
    <updated>2016-10-23T19:18:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://" target="_blank" rel="external">Leetcode - Maximum XOR of Two Numbers in an Array</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode - Maximum XOR of Two Numbers in an Array&lt;/a&gt;.&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Reverse Words in a String</title>
    <link href="http://xinli90.com/2016/10/17/Reverse-Words-in-a-String/"/>
    <id>http://xinli90.com/2016/10/17/Reverse-Words-in-a-String/</id>
    <published>2016-10-18T02:17:03.000Z</published>
    <updated>2016-10-18T03:02:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/reverse-words-in-a-string/" target="_blank" rel="external">Leetcode - Reverse Words in a String</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an input string, reverse the string word by word.</p>
<p>For example,<br>Given s = “the sky is blue”,<br>return “blue is sky the”.    </p>
<p>Update (2015-02-12):<br>For C programmers: Try to solve it in-place in O(1) space.</p>
<p>click to show clarification.</p>
<p>Clarification:<br>What constitutes a word?<br>A sequence of non-space characters constitutes a word.<br>Could the input string contain leading or trailing spaces?<br>Yes. However, your reversed string should not contain leading or trailing spaces.<br>How about multiple spaces between two words?<br>Reduce them to a single space in the reversed string.      </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><ol>
<li>splitting on the regex for one-or-more whitespace, this takes care of multiple spaces/tabs/newlines/etc in the input. </li>
<li>Since the input could have leading/trailing whitespace, which would result in empty matches, I first trim the input string.</li>
</ol>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> reverseWords(<span class="keyword">String</span> s) &#123;</div><div class="line">        <span class="keyword">String</span>[] <span class="keyword">array</span> = s.trim().split(<span class="string">" +"</span>);</div><div class="line">        <span class="comment">//String[] arr = s.trim().split("\\s+");</span></div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="built_in">for</span>(<span class="keyword">String</span> <span class="keyword">string</span> : <span class="keyword">array</span>) &#123;</div><div class="line">            sb.insert(<span class="number">0</span>, <span class="string">" "</span>+ <span class="keyword">string</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">return</span> sb.substring(<span class="number">1</span>).toString();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Follow-up"><a href="#Follow-up" class="headerlink" title="Follow up"></a>Follow up</h4><p>If we want to get reversed string for both word in string and letters in each word.</p>
<p>1.If there is single whitespace, we can use below to get.</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">StringBuilder </span><span class="built_in">sb</span> = new <span class="keyword">StringBuilder(s.trim());</span></div><div class="line"><span class="symbol">return</span> <span class="built_in">sb</span>.<span class="keyword">reverse().toString();</span></div></pre></td></tr></table></figure>
<p>2.If there are multiple whitespaces,then we can use reverse word first, and then reverse each word.   </p>
<p>Or<br>similar way with single whitespace solution and then eliminate the multiple whitespaces to single one. </p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> class Solution1&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> reverseWord(<span class="keyword">String</span> s) &#123;</div><div class="line">		<span class="keyword">String</span>[] array = s.<span class="built_in">trim</span>().<span class="built_in">split</span>(<span class="string">" +"</span>);</div><div class="line">		<span class="comment">//String[] arr = s.trim().split("\\s+");</span></div><div class="line">		StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">String</span> string : array) &#123;</div><div class="line">			sb.insert(<span class="number">0</span>, <span class="string">" "</span>+ reverseString2(string));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> sb.substring(<span class="number">1</span>).toString();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> reverseString(<span class="keyword">String</span> s) &#123;</div><div class="line">		StringBuilder sb = <span class="keyword">new</span> StringBuilder(s.<span class="built_in">trim</span>());</div><div class="line">		<span class="keyword">return</span> sb.<span class="built_in">reverse</span>().toString();</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> reverseString2(<span class="keyword">String</span> s) &#123;</div><div class="line">		<span class="built_in">char</span>[] arr = s.toCharArray();</div><div class="line">		<span class="built_in">int</span> left = <span class="number">0</span>, right = arr.length<span class="number">-1</span>;</div><div class="line">		<span class="keyword">while</span>(left &lt; right) &#123;</div><div class="line">			<span class="built_in">char</span> temp = arr[left];</div><div class="line">			arr[left] = arr[right];</div><div class="line">			arr[right] = temp;</div><div class="line">			left++;</div><div class="line">			right--;</div><div class="line"> 		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">String</span>(arr);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> class Solution2&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> reverseWord(<span class="keyword">String</span> s) &#123;</div><div class="line">		StringBuilder sb = <span class="keyword">new</span> StringBuilder(s.<span class="built_in">trim</span>());</div><div class="line">		<span class="keyword">String</span>[] arr = sb.<span class="built_in">reverse</span>().toString().<span class="built_in">split</span>(<span class="string">" +"</span>);</div><div class="line">		StringBuilder sb2 = <span class="keyword">new</span> StringBuilder();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">String</span> string : arr) &#123;</div><div class="line">			sb2.<span class="built_in">append</span>(string+<span class="string">" "</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> sb2.substring(<span class="number">0</span>,sb2.length()<span class="number">-1</span>).toString();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> class Solution3&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> reverseWord(<span class="keyword">String</span> s) &#123;</div><div class="line">		StringBuilder sb = <span class="keyword">new</span> StringBuilder(s.<span class="built_in">trim</span>());</div><div class="line">		<span class="keyword">return</span> sb.<span class="built_in">reverse</span>().toString().replaceAll(<span class="string">" +"</span>,<span class="string">" "</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/reverse-words-in-a-string/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode - R
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Reverse Words in a String II</title>
    <link href="http://xinli90.com/2016/10/17/Reverse-Words-in-a-String-II/"/>
    <id>http://xinli90.com/2016/10/17/Reverse-Words-in-a-String-II/</id>
    <published>2016-10-18T01:57:43.000Z</published>
    <updated>2016-10-18T02:16:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/reverse-words-in-a-string-ii/" target="_blank" rel="external">Leetcode - Reverse Words in a String II</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.</p>
<p>The input string does not contain leading or trailing spaces and the words are always separated by a single space.</p>
<p>For example,<br>Given s = “the sky is blue”,<br>return “blue is sky the”.     </p>
<p>Could you do it in-place without allocating extra space?</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><ol>
<li>Reverse the whole string first</li>
<li>Reverse the each word </li>
</ol>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> void reverseWords(char[] s) &#123;</div><div class="line">        <span class="comment">//reverse the whole string</span></div><div class="line">        <span class="built_in">reverse</span>(s,<span class="number">0</span>,s.length-<span class="number">1</span>);</div><div class="line">        <span class="keyword">for</span>(int i=<span class="number">0</span>,j=<span class="number">0</span>; i&lt;=s.length; i++) &#123;</div><div class="line">            <span class="keyword">if</span>(i==s.length || s[i]==' ')&#123;</div><div class="line">                <span class="built_in">reverse</span>(s,j,i-<span class="number">1</span>);</div><div class="line">                j = i+<span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> void <span class="built_in">reverse</span>(char[] s, int <span class="keyword">left</span>, int <span class="keyword">right</span>) &#123;</div><div class="line">        <span class="keyword">while</span>(<span class="keyword">left</span>&lt;<span class="keyword">right</span>) &#123;</div><div class="line">            char temp = s[<span class="keyword">left</span>];</div><div class="line">            s[<span class="keyword">left</span>] = s[<span class="keyword">right</span>];</div><div class="line">            s[<span class="keyword">right</span>] = temp;</div><div class="line">            <span class="keyword">left</span>++;</div><div class="line">            <span class="keyword">right</span>--;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/reverse-words-in-a-string-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode 
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Permutation Sequence</title>
    <link href="http://xinli90.com/2016/10/17/Permutation-Sequence/"/>
    <id>http://xinli90.com/2016/10/17/Permutation-Sequence/</id>
    <published>2016-10-17T18:32:00.000Z</published>
    <updated>2016-10-17T23:19:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/permutation-sequence/" target="_blank" rel="external">Leetcode - Permutation Sequence</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>The set [1,2,3,…,n] contains a total of n! unique permutations.</p>
<p>By listing and labeling all of the permutations in order,<br>We get the following sequence (ie, for n = 3):   </p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">"123"</span></div><div class="line"><span class="string">"132"</span></div><div class="line"><span class="string">"213"</span></div><div class="line"><span class="string">"231"</span></div><div class="line"><span class="string">"312"</span></div><div class="line"><span class="string">"321"</span></div></pre></td></tr></table></figure>
<p>Given n and k, return the kth permutation sequence.    </p>
<p>Note: Given n will be between 1 and 9 inclusive.   </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Backtracking to get all string, and get the kth string.</li>
<li>For this solution it will get Time Limit Exceeded.</li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>If we don’t get Time Limit Exceeded, we shold use the formula to calculate each digit.</li>
<li>Notice that for n groups there are (n-1)! permutations in each group.(n-2)! permutations for n-1 groups…</li>
<li>So use k/(n-1)! to get first place, then k will be k%(n-1)!, it means we need iterate k%(n-1)! times for remaining numbers until the last place.</li>
</ol>
<figure class="highlight zephir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution1</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> String getPermutation(<span class="keyword">int</span> n, <span class="keyword">int</span> k) &#123;</div><div class="line">        <span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; lists = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span> = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        helper(lists,<span class="keyword">list</span>,n);</div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i : lists.get(k<span class="number">-1</span>)) &#123;</div><div class="line">            sb.append(i);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> void helper(<span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; lists,<span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span>,<span class="keyword">int</span> n)&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">list</span>.size() == n) &#123;</div><div class="line">            lists.add(<span class="keyword">new</span> ArrayList&lt;&gt;(<span class="keyword">list</span>));</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</div><div class="line">                <span class="keyword">if</span>(<span class="keyword">list</span>.contains(i)) <span class="keyword">continue</span>;</div><div class="line">                <span class="keyword">list</span>.add(i);</div><div class="line">                helper(lists,<span class="keyword">list</span>,n);</div><div class="line">                <span class="keyword">list</span>.remove(<span class="keyword">list</span>.size()<span class="number">-1</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> String getPermutation(<span class="keyword">int</span> n, <span class="keyword">int</span> k) &#123;</div><div class="line">    	<span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span> = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</div><div class="line">    		<span class="keyword">list</span>.add(i);</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">int</span>[] fact = <span class="keyword">new</span> fact[n];</div><div class="line">    	fact[<span class="number">0</span>] = <span class="number">1</span>;</div><div class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</div><div class="line">    		fact[i] = i*fact[i<span class="number">-1</span>];</div><div class="line">    	&#125;</div><div class="line">    	k = k<span class="number">-1</span>;</div><div class="line">    	StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">    	<span class="keyword">for</span>(<span class="keyword">int</span> i=n; i&gt;<span class="number">0</span>; i--)&#123;</div><div class="line">    		<span class="keyword">int</span> index = k/fact[i<span class="number">-1</span>];</div><div class="line">    		sb.append(<span class="keyword">list</span>.get(index));</div><div class="line">    		k = k%fact[i<span class="number">-1</span>];</div><div class="line">    		<span class="keyword">list</span>.remove(index);</div><div class="line">    	&#125;</div><div class="line">    	<span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/permutation-sequence/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode - Permut
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Permutations II</title>
    <link href="http://xinli90.com/2016/10/17/Permutations-II/"/>
    <id>http://xinli90.com/2016/10/17/Permutations-II/</id>
    <published>2016-10-17T18:17:43.000Z</published>
    <updated>2016-10-19T15:54:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/permutations-ii/" target="_blank" rel="external">Leetcode-Permutations II</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a collection of numbers that might contain duplicates, return all possible unique permutations.</p>
<p>For example,<br>[1,1,2] have the following unique permutations</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>],</div><div class="line">  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>],</div><div class="line">  [<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>]</div><div class="line">]</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><ol>
<li>sort the array first, make sure the same number cluster together.</li>
<li>In order to avoid duplicate array, we need to check if the duplicate elements have already been used. Use a boolean array to track it.</li>
<li>If the current element is used or the current one is the same with previous one and the previous one is used. Then we don’t use it anymore. </li>
</ol>
<figure class="highlight zephir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">	 <span class="keyword">public</span> <span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; permuteUnique(<span class="keyword">int</span>[] nums) &#123;</div><div class="line">        <span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; lists = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span> = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">boolean</span>[] used = <span class="keyword">new</span> <span class="keyword">boolean</span>[nums.length];</div><div class="line">        Arrays.sort(nums);</div><div class="line">        helper(lists,<span class="keyword">list</span>,used,nums);</div><div class="line">        <span class="keyword">return</span> lists;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> void helper(<span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; lists,<span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span>,<span class="keyword">boolean</span>[] used,<span class="keyword">int</span>[] nums) &#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">list</span>.size()==nums.length) &#123;</div><div class="line">            lists.add(<span class="keyword">new</span> ArrayList&lt;&gt;(<span class="keyword">list</span>));</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;nums.length; i++)&#123;</div><div class="line">                <span class="keyword">if</span>(used[i] || (i&gt;<span class="number">0</span> &amp;&amp; nums[i]==nums[i<span class="number">-1</span>] &amp;&amp; used[i<span class="number">-1</span>])) &#123;</div><div class="line">                    <span class="keyword">continue</span>;</div><div class="line">                &#125;<span class="keyword">else</span> &#123;</div><div class="line">                    used[i] = <span class="keyword">true</span>;</div><div class="line">                    <span class="keyword">list</span>.add(nums[i]);</div><div class="line">                    helper(lists,<span class="keyword">list</span>,used,nums);</div><div class="line">                    <span class="keyword">list</span>.remove(<span class="keyword">list</span>.size()<span class="number">-1</span>);</div><div class="line">                    used[i] = <span class="keyword">false</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/permutations-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Permutations 
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Next Permutation</title>
    <link href="http://xinli90.com/2016/10/16/Next-Permutation/"/>
    <id>http://xinli90.com/2016/10/16/Next-Permutation/</id>
    <published>2016-10-16T18:37:12.000Z</published>
    <updated>2016-10-17T13:31:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/permutations/" target="_blank" rel="external">Leetcode-Permutations</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.</p>
<p>If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).</p>
<p>The replacement must be in-place, do not allocate extra memory.</p>
<p>Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column. </p>
<p>1, 2, 3 → 1, 3, 2<br>3, 2, 1 → 1, 2, 3<br>1, 1, 5 → 1, 5, 1      </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><ol>
<li>首先从右往左找到一个点i, 使得nums[i]&lt;nums[i+1], 如果没有这样的点，说明该数组已经是Descending，直接reverse结束.</li>
<li>再从右往左找到大于i的点j，使得刚好nums[j]&gt;nums[i], 调换i 和 j 的值，找出下一个最大值，然后reverse后面的数组，使其数组变为最小值.</li>
</ol>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> void nextPermutation(int[] nums) &#123;</div><div class="line">        int <span class="keyword">right</span> = nums.length-<span class="number">2</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="keyword">right</span>&gt;=<span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">if</span>(nums[<span class="keyword">right</span>]&lt;nums[<span class="keyword">right</span>+<span class="number">1</span>])&#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;<span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">right</span>--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">right</span>&lt;<span class="number">0</span>) &#123;</div><div class="line">            <span class="built_in">reverse</span>(nums,<span class="keyword">right</span>+<span class="number">1</span>);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        int <span class="keyword">left</span> = nums.length-<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="keyword">right</span>&lt;<span class="keyword">left</span>) &#123;</div><div class="line">            <span class="keyword">if</span>(nums[<span class="keyword">left</span>]&gt;nums[<span class="keyword">right</span>])&#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">left</span>--;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">swap</span>(nums,<span class="keyword">right</span>,<span class="keyword">left</span>);</div><div class="line">        <span class="built_in">reverse</span>(nums,<span class="keyword">right</span>+<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> void <span class="built_in">swap</span>(int[] nums, int i,int j) &#123;</div><div class="line">        int temp = nums[i];</div><div class="line">        nums[i] = nums[j];</div><div class="line">        nums[j] = temp;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> void <span class="built_in">reverse</span>(int[] nums,int <span class="keyword">left</span>) &#123;</div><div class="line">        int <span class="keyword">right</span> = nums.length-<span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="keyword">left</span>&lt;<span class="keyword">right</span>) &#123;</div><div class="line">            <span class="built_in">swap</span>(nums,<span class="keyword">left</span>,<span class="keyword">right</span>);</div><div class="line">            <span class="keyword">left</span>++;</div><div class="line">            <span class="keyword">right</span>--;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/permutations/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Permutations&lt;/a&gt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Permutations</title>
    <link href="http://xinli90.com/2016/10/16/Permutations/"/>
    <id>http://xinli90.com/2016/10/16/Permutations/</id>
    <published>2016-10-16T18:24:47.000Z</published>
    <updated>2016-10-16T18:33:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/permutations/" target="_blank" rel="external">Leetcode-Permutations</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a collection of distinct numbers, return all possible permutations.</p>
<p>For example,<br>[1,2,3] have the following permutations:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</div><div class="line">  [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>],</div><div class="line">  [<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>],</div><div class="line">  [<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>],</div><div class="line">  [<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>],</div><div class="line">  [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</div><div class="line">]</div></pre></td></tr></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>Backtracking</p>
<figure class="highlight zephir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; permute(<span class="keyword">int</span>[] nums) &#123;</div><div class="line">		<span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; lists = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">		<span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span> = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">		helper(lists,<span class="keyword">list</span>,nums);</div><div class="line">		<span class="keyword">return</span> lists;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">private</span> void helper(<span class="keyword">List</span>&lt;<span class="keyword">List</span>&lt;Integer&gt;&gt; lists,<span class="keyword">List</span>&lt;Integer&gt; <span class="keyword">list</span>,<span class="keyword">int</span>[] nums) &#123;</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">list</span>.size() == nums.length) &#123;</div><div class="line">			lists.add(<span class="keyword">new</span> ArrayList&lt;Integer&gt;(<span class="keyword">list</span>));</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;nums.length; i++) &#123;</div><div class="line">			<span class="keyword">if</span>(!<span class="keyword">list</span>.contains(nums[i])) &#123;</div><div class="line">				<span class="keyword">list</span>.add(nums[i]);</div><div class="line">				helper(lists,<span class="keyword">list</span>,nums);</div><div class="line">				<span class="keyword">list</span>.remove(<span class="keyword">list</span>.size()<span class="number">-1</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/permutations/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Permutations&lt;/a&gt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Remove Duplicates from Sorted Array</title>
    <link href="http://xinli90.com/2016/10/13/Remove-Duplicates-from-Sorted-Array/"/>
    <id>http://xinli90.com/2016/10/13/Remove-Duplicates-from-Sorted-Array/</id>
    <published>2016-10-13T16:08:51.000Z</published>
    <updated>2016-10-13T16:33:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="external">Leetcode-Remove Duplicates from Sorted Array</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.</p>
<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>
<p>For example,<br>Given input array nums = [1,1,2],</p>
<p>Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn’t matter what you leave beyond the new length.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1"><a href="#Solution1" class="headerlink" title="Solution1"></a>Solution1</h4><ol>
<li>Maintain two pointers, left pointer and right pointer, they are adjacent at the beginning.</li>
<li>If the the value of first pointer is same to second one’s, shift second pointer right one step.</li>
<li>If they are not the same, then we will check the difference between two pointers first. If it’s greater than 1, it means we already have duplicate elements, we need change the value of index left+1 to the value of index right. If two pointer are still adjacent, do nothing. At last, shift two pointers right one step.</li>
</ol>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><ol>
<li>Just maintain one pointer, Using for each to iterate array, assign the value to the pointer’s location if the previous one and the current one are different.</li>
</ol>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution1 &#123;</div><div class="line">   <span class="keyword">public</span> <span class="built_in">int</span> removeDuplicates(<span class="built_in">int</span>[] nums) &#123;</div><div class="line">       <span class="keyword">if</span>(nums.length&lt;<span class="number">2</span>) return nums.length;</div><div class="line">       <span class="built_in">int</span> <span class="built_in">left</span> = <span class="number">0</span>, <span class="built_in">right</span> = <span class="number">1</span>;</div><div class="line">       <span class="keyword">while</span>(<span class="built_in">right</span>&lt;nums.length) &#123;</div><div class="line">           <span class="keyword">if</span>(nums[<span class="built_in">left</span>]!=nums[<span class="built_in">right</span>])&#123;</div><div class="line">               <span class="keyword">if</span>(<span class="built_in">left</span>+<span class="number">1</span>&lt;<span class="built_in">right</span>)&#123;</div><div class="line">                   nums[<span class="built_in">left</span>+<span class="number">1</span>] = nums[<span class="built_in">right</span>];</div><div class="line">               &#125;</div><div class="line">               <span class="built_in">left</span>++;</div><div class="line">               <span class="built_in">right</span>++;</div><div class="line">           &#125;<span class="keyword">else</span>&#123;</div><div class="line">               <span class="built_in">right</span>++;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       return <span class="built_in">left</span>+<span class="number">1</span>;</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution2 &#123;</div><div class="line">   <span class="keyword">public</span> <span class="built_in">int</span> removeDuplicates(<span class="built_in">int</span>[] nums) &#123;</div><div class="line">   	<span class="built_in">int</span> i = <span class="number">0</span>;</div><div class="line">       <span class="keyword">for</span>(<span class="built_in">int</span> num : nums) &#123;</div><div class="line">       	<span class="keyword">if</span>(i==<span class="number">0</span> || nums[i<span class="number">-1</span>] &lt; num) &#123;</div><div class="line">       		nums[i++] = num;</div><div class="line">       	&#125;</div><div class="line">       &#125;</div><div class="line">       return i;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/remove-duplicates-from-sorted-array/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Le
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>House Robber</title>
    <link href="http://xinli90.com/2016/10/13/House-Robber/"/>
    <id>http://xinli90.com/2016/10/13/House-Robber/</id>
    <published>2016-10-13T15:11:52.000Z</published>
    <updated>2016-10-13T15:53:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/house-robber/" target="_blank" rel="external">Leetcode-House Robber</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.</p>
<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.    </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution1-For-DP"><a href="#Solution1-For-DP" class="headerlink" title="Solution1 For DP"></a>Solution1 For DP</h4><p>The time and space complexity is O(n)</p>
<ul>
<li>State: f[i] represents the maximum money the robber get rob until arriving the i-th house </li>
<li>Function: f[i] = Max(f[i-1],f[i-2]+nums[i])</li>
<li>Initialize: f[0] = nums[0], f[1] = nums[1]</li>
<li>Answer: f[nums.length-1]</li>
</ul>
<h4 id="Solution2"><a href="#Solution2" class="headerlink" title="Solution2"></a>Solution2</h4><p>Similar way with solution1, but reduce the space complexity to O(1)</p>
<figure class="highlight glsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">public class Solution1 &#123;</div><div class="line">    public <span class="type">int</span> rob(<span class="type">int</span>[] nums) &#123;</div><div class="line">    	<span class="keyword">if</span>(nums==null || nums.<span class="built_in">length</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="comment">//initialize</span></div><div class="line">        <span class="type">int</span> <span class="built_in">length</span> = nums.<span class="built_in">length</span>;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">length</span>==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</div><div class="line">        <span class="type">int</span>[] f = new <span class="type">int</span>[nums.<span class="built_in">length</span>];</div><div class="line">        f[<span class="number">0</span>] = nums[<span class="number">0</span>];</div><div class="line">        f[<span class="number">1</span>] = Math.<span class="built_in">max</span>(nums[<span class="number">0</span>],nums[<span class="number">1</span>]);</div><div class="line">        <span class="comment">//function</span></div><div class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;<span class="built_in">length</span>; i++) &#123;</div><div class="line">        	f[i] = Math.<span class="built_in">max</span>(f[i<span class="number">-1</span>],f[i<span class="number">-2</span>]+nums[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//answer</span></div><div class="line">        <span class="keyword">return</span> f[<span class="built_in">length</span><span class="number">-1</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public class Solution2 &#123;</div><div class="line">    public <span class="type">int</span> rob(<span class="type">int</span>[] nums) &#123;</div><div class="line">    	<span class="keyword">if</span>(nums==null || nums.<span class="built_in">length</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        <span class="comment">//initialize</span></div><div class="line">        <span class="type">int</span> <span class="built_in">length</span> = nums.<span class="built_in">length</span>;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">length</span>==<span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</div><div class="line">        <span class="type">int</span> last = <span class="number">0</span>, current = <span class="number">0</span>;</div><div class="line">        <span class="comment">//function</span></div><div class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">length</span>; i++) &#123;</div><div class="line">        	<span class="type">int</span> temp = last; <span class="comment">// the i-2 th element</span></div><div class="line">        	last = current; <span class="comment">// the i-1 th element</span></div><div class="line">        	current = Math.<span class="built_in">max</span>(current,nums[i]+temp); <span class="comment">//the i-th element</span></div><div class="line">        &#125;</div><div class="line">        <span class="comment">//answer</span></div><div class="line">        <span class="keyword">return</span> current;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/house-robber/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-House Robber&lt;/a&gt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Count and Say</title>
    <link href="http://xinli90.com/2016/10/13/Count-and-Say/"/>
    <id>http://xinli90.com/2016/10/13/Count-and-Say/</id>
    <published>2016-10-13T15:02:04.000Z</published>
    <updated>2016-10-13T15:09:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/count-and-say/" target="_blank" rel="external">Leetcode-Count and Say</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>The count-and-say sequence is the sequence of integers beginning as follows:<br>1, 11, 21, 1211, 111221, …     </p>
<p>1 is read off as “one 1” or 11.<br>11 is read off as “two 1s” or 21.<br>21 is read off as “one 2, then one 1” or 1211.   </p>
<p>Given an integer n, generate the nth sequence.     </p>
<p>Note: The sequence of integers will be represented as a string.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h4><p>Notice: There is a misunderstanding place that we always start from “1”, not “n”. But we need calculate n times</p>
<ol>
<li>Maintain two pointers, Using first pointer iterate each element and the second pointer to find out if the adjacent element is the same.</li>
</ol>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution &#123;</div><div class="line">    <span class="keyword">public</span> <span class="built_in">String</span> countAndSay(<span class="built_in">int</span> n) &#123;</div><div class="line">        return count(<span class="string">"1"</span>,n<span class="number">-1</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="built_in">String</span> count(<span class="built_in">String</span> s, <span class="built_in">int</span> n) &#123;</div><div class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) return s;</div><div class="line">        char[] arr = s.toCharArray();</div><div class="line">        <span class="built_in">int</span> <span class="built_in">left</span>=<span class="number">0</span>;</div><div class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">        <span class="keyword">while</span>(<span class="built_in">left</span>&lt;arr.length) &#123;</div><div class="line">            <span class="built_in">int</span> <span class="built_in">right</span> = <span class="built_in">left</span>+<span class="number">1</span>;</div><div class="line">            <span class="keyword">while</span>(<span class="built_in">right</span>&lt;arr.length &amp;&amp; arr[<span class="built_in">left</span>]==arr[<span class="built_in">right</span>])&#123;</div><div class="line">                <span class="built_in">right</span>++;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">int</span> num = <span class="built_in">right</span>-<span class="built_in">left</span>;</div><div class="line">            sb.append(num+<span class="string">""</span>+arr[<span class="built_in">left</span>]);</div><div class="line">            <span class="built_in">left</span> = <span class="built_in">right</span>;</div><div class="line">        &#125;</div><div class="line">        return count(sb.toString(),n<span class="number">-1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/count-and-say/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Count and Say&lt;/
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Maximum Subarray</title>
    <link href="http://xinli90.com/2016/10/12/Maximum-Subarray/"/>
    <id>http://xinli90.com/2016/10/12/Maximum-Subarray/</id>
    <published>2016-10-12T14:55:20.000Z</published>
    <updated>2016-10-12T17:48:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the solution about <a href="https://leetcode.com/problems/maximum-subarray/" target="_blank" rel="external">Leetcode-Maximum Subarray</a>.</p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Find the contiguous subarray within an array (containing at least one number) which has the largest sum.      </p>
<p>For example, given the array [-2,1,-3,4,-1,2,1,-5,4],</p>
<p>the contiguous subarray [4,-1,2,1] has the largest sum = 6.  </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><h4 id="Solution-DP"><a href="#Solution-DP" class="headerlink" title="Solution: DP"></a>Solution: DP</h4><ol>
<li>State: sum[i] represents the largest sum in location i.</li>
<li>Function: if(sum[i-1]&gt;0),then sum[i] = sum[i-1]+nums[i], else sum[i] = nums[i].</li>
<li>Initialize: sum[0] = nums[0]</li>
<li>Answer: the maximum of sum[i]</li>
</ol>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Solution &#123;</div><div class="line">    <span class="keyword">public</span> <span class="built_in">int</span> maxSubArray(<span class="built_in">int</span>[] nums) &#123;</div><div class="line">        <span class="built_in">int</span>[] <span class="built_in">sum</span> = new <span class="built_in">int</span>[nums.length];</div><div class="line">        //initiazlie</div><div class="line">        <span class="built_in">sum</span>[<span class="number">0</span>] = nums[<span class="number">0</span>];</div><div class="line">        <span class="built_in">int</span> <span class="built_in">max</span> = <span class="built_in">sum</span>[<span class="number">0</span>];</div><div class="line">        //<span class="function"><span class="keyword">function</span></span></div><div class="line">        for(<span class="built_in">int</span> i=<span class="number">1</span>; i&lt;nums.length; i++) &#123;</div><div class="line">        	<span class="keyword">if</span>(<span class="built_in">sum</span>[i-<span class="number">1</span>]&gt;<span class="number">0</span>)&#123;</div><div class="line">        		<span class="built_in">sum</span>[i] = <span class="built_in">sum</span>[i-<span class="number">1</span>] + nums[i];</div><div class="line">        	&#125;<span class="keyword">else</span> &#123;</div><div class="line">        		<span class="built_in">sum</span>[i] = nums[i];</div><div class="line">        	&#125;</div><div class="line">        	<span class="built_in">max</span> = Math.<span class="built_in">max</span>(<span class="built_in">max</span>, <span class="built_in">sum</span>[i]);</div><div class="line">        &#125;</div><div class="line">        //answer</div><div class="line">        <span class="keyword">return</span> <span class="built_in">max</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is the solution about &lt;a href=&quot;https://leetcode.com/problems/maximum-subarray/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Leetcode-Maximum Suba
    
    </summary>
    
      <category term="Leetcode" scheme="http://xinli90.com/categories/Leetcode/"/>
    
    
      <category term="Leetcode" scheme="http://xinli90.com/tags/Leetcode/"/>
    
  </entry>
  
</feed>
